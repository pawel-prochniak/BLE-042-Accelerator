ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,4,4
  24              		.comm	ADC_countsPer10Volt,8,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 8
  29              	ADC_channelsConfig:
  30 0000 00040000 		.word	1024
  31 0004 00040000 		.word	1024
  32              		.section	.text.ADC_Start,"ax",%progbits
  33              		.align	2
  34              		.global	ADC_Start
  35              		.code	16
  36              		.thumb_func
  37              		.type	ADC_Start, %function
  38              	ADC_Start:
  39              	.LFB2:
  40              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 2


  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  41              		.loc 1 64 0
  42              		.cfi_startproc
  43 0000 80B5     		push	{r7, lr}
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 3


  49              		.loc 1 66 0
  50 0004 064B     		ldr	r3, .L3
  51 0006 1B78     		ldrb	r3, [r3]
  52 0008 002B     		cmp	r3, #0
  53 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  54              		.loc 1 68 0
  55 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  56              		.loc 1 69 0
  57 0010 034B     		ldr	r3, .L3
  58 0012 0122     		mov	r2, #1
  59 0014 1A70     		strb	r2, [r3]
  60              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  61              		.loc 1 71 0
  62 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  63              		.loc 1 72 0
  64 001a BD46     		mov	sp, r7
  65              		@ sp needed
  66 001c 80BD     		pop	{r7, pc}
  67              	.L4:
  68 001e C046     		.align	2
  69              	.L3:
  70 0020 00000000 		.word	ADC_initVar
  71              		.cfi_endproc
  72              	.LFE2:
  73              		.size	ADC_Start, .-ADC_Start
  74              		.section	.text.ADC_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_Init, %function
  80              	ADC_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 4


  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 5


 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 0F20     		mov	r0, #15
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  96              		.loc 1 173 0
  97 000e 784B     		ldr	r3, .L21
  98 0010 0F20     		mov	r0, #15
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 764B     		ldr	r3, .L21+4
 103 001a 0122     		mov	r2, #1
 104 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 6


 106 001e 764B     		ldr	r3, .L21+8
 107 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 7549     		ldr	r1, .L21+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 7549     		ldr	r1, .L21+16
 117              	.L7:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 754B     		ldr	r3, .L21+20
 120 002e 754A     		ldr	r2, .L21+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 744B     		ldr	r3, .L21+24
 126 0038 744A     		ldr	r2, .L21+28
 127 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 744B     		ldr	r3, .L21+32
 130 003e 754A     		ldr	r2, .L21+36
 131 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 754B     		ldr	r3, .L21+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 744B     		ldr	r3, .L21+44
 138 004a 754A     		ldr	r2, .L21+48
 139 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 754B     		ldr	r3, .L21+52
 142 0050 734A     		ldr	r2, .L21+48
 143 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 144              		.loc 1 190 0 discriminator 4
 145 0054 744B     		ldr	r3, .L21+56
 146 0056 744A     		ldr	r2, .L21+56
 147 0058 1268     		ldr	r2, [r2]
 148 005a 8021     		mov	r1, #128
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 7


 149 005c 4902     		lsl	r1, r1, #9
 150 005e 0A43     		orr	r2, r1
 151 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 152              		.loc 1 193 0 discriminator 4
 153 0062 724B     		ldr	r3, .L21+60
 154 0064 714A     		ldr	r2, .L21+60
 155 0066 1268     		ldr	r2, [r2]
 156 0068 8021     		mov	r1, #128
 157 006a 4902     		lsl	r1, r1, #9
 158 006c 0A43     		orr	r2, r1
 159 006e 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 160              		.loc 1 197 0 discriminator 4
 161 0070 6F4B     		ldr	r3, .L21+64
 162 0072 0022     		mov	r2, #0
 163 0074 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 164              		.loc 1 198 0 discriminator 4
 165 0076 6F4B     		ldr	r3, .L21+68
 166 0078 0022     		mov	r2, #0
 167 007a 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 168              		.loc 1 199 0 discriminator 4
 169 007c 6E4B     		ldr	r3, .L21+72
 170 007e 1122     		mov	r2, #17
 171 0080 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 172              		.loc 1 206 0 discriminator 4
 173 0082 6E4B     		ldr	r3, .L21+76
 174 0084 1B68     		ldr	r3, [r3]
 175 0086 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 176              		.loc 1 207 0 discriminator 4
 177 0088 7B68     		ldr	r3, [r7, #4]
 178 008a 6D4A     		ldr	r2, .L21+80
 179 008c 1340     		and	r3, r2
 180 008e 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 8


 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 181              		.loc 1 220 0 discriminator 4
 182 0090 7B68     		ldr	r3, [r7, #4]
 183 0092 8022     		mov	r2, #128
 184 0094 9205     		lsl	r2, r2, #22
 185 0096 1343     		orr	r3, r2
 186 0098 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 187              		.loc 1 221 0 discriminator 4
 188 009a 7B68     		ldr	r3, [r7, #4]
 189 009c 0122     		mov	r2, #1
 190 009e 9343     		bic	r3, r2
 191 00a0 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 192              		.loc 1 226 0 discriminator 4
 193 00a2 664B     		ldr	r3, .L21+76
 194 00a4 7A68     		ldr	r2, [r7, #4]
 195 00a6 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 196              		.loc 1 232 0 discriminator 4
 197 00a8 0023     		mov	r3, #0
 198 00aa FB60     		str	r3, [r7, #12]
 199 00ac 99E0     		b	.L8
 200              	.L20:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 201              		.loc 1 234 0
 202 00ae 654B     		ldr	r3, .L21+84
 203 00b0 FA68     		ldr	r2, [r7, #12]
 204 00b2 9200     		lsl	r2, r2, #2
 205 00b4 D258     		ldr	r2, [r2, r3]
 206 00b6 DC23     		mov	r3, #220
 207 00b8 9B01     		lsl	r3, r3, #6
 208 00ba 1340     		and	r3, r2
 209 00bc 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 210              		.loc 1 236 0
 211 00be 624A     		ldr	r2, .L21+88
 212 00c0 FB68     		ldr	r3, [r7, #12]
 213 00c2 D318     		add	r3, r2, r3
 214 00c4 1B78     		ldrb	r3, [r3]
 215 00c6 1A1C     		mov	r2, r3
 216 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 9


 217 00ca 1343     		orr	r3, r2
 218 00cc 7B60     		str	r3, [r7, #4]
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219              		.loc 1 250 0
 220 00ce FB68     		ldr	r3, [r7, #12]
 221 00d0 002B     		cmp	r3, #0
 222 00d2 29D1     		bne	.L9
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 223              		.loc 1 253 0
 224 00d4 FB68     		ldr	r3, [r7, #12]
 225 00d6 9B00     		lsl	r3, r3, #2
 226 00d8 5C4A     		ldr	r2, .L21+92
 227 00da 9446     		mov	ip, r2
 228 00dc 6344     		add	r3, r3, ip
 229 00de 7A68     		ldr	r2, [r7, #4]
 230 00e0 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 231              		.loc 1 255 0
 232 00e2 584B     		ldr	r3, .L21+84
 233 00e4 FA68     		ldr	r2, [r7, #12]
 234 00e6 9200     		lsl	r2, r2, #2
 235 00e8 D358     		ldr	r3, [r2, r3]
 236 00ea 0122     		mov	r2, #1
 237 00ec 1340     		and	r3, r2
 238 00ee 09D0     		beq	.L10
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 239              		.loc 1 257 0
 240 00f0 4F4B     		ldr	r3, .L21+64
 241 00f2 4F4A     		ldr	r2, .L21+64
 242 00f4 1268     		ldr	r2, [r2]
 243 00f6 F968     		ldr	r1, [r7, #12]
 244 00f8 0120     		mov	r0, #1
 245 00fa 8840     		lsl	r0, r0, r1
 246 00fc 011C     		mov	r1, r0
 247 00fe 89B2     		uxth	r1, r1
 248 0100 0A43     		orr	r2, r1
 249 0102 1A60     		str	r2, [r3]
 250              	.L10:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 10


 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 251              		.loc 1 260 0
 252 0104 4F4B     		ldr	r3, .L21+84
 253 0106 FA68     		ldr	r2, [r7, #12]
 254 0108 9200     		lsl	r2, r2, #2
 255 010a D358     		ldr	r3, [r2, r3]
 256 010c 0222     		mov	r2, #2
 257 010e 1340     		and	r3, r2
 258 0110 2AD0     		beq	.L12
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 259              		.loc 1 262 0
 260 0112 484B     		ldr	r3, .L21+68
 261 0114 474A     		ldr	r2, .L21+68
 262 0116 1268     		ldr	r2, [r2]
 263 0118 F968     		ldr	r1, [r7, #12]
 264 011a 0120     		mov	r0, #1
 265 011c 8840     		lsl	r0, r0, r1
 266 011e 011C     		mov	r1, r0
 267 0120 89B2     		uxth	r1, r1
 268 0122 0A43     		orr	r2, r1
 269 0124 1A60     		str	r2, [r3]
 270 0126 1FE0     		b	.L12
 271              	.L9:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 272              		.loc 1 268 0
 273 0128 494B     		ldr	r3, .L21+96
 274 012a 7A68     		ldr	r2, [r7, #4]
 275 012c 8021     		mov	r1, #128
 276 012e C905     		lsl	r1, r1, #23
 277 0130 0A43     		orr	r2, r1
 278 0132 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 279              		.loc 1 270 0
 280 0134 434B     		ldr	r3, .L21+84
 281 0136 FA68     		ldr	r2, [r7, #12]
 282 0138 9200     		lsl	r2, r2, #2
 283 013a D358     		ldr	r3, [r2, r3]
 284 013c 0122     		mov	r2, #1
 285 013e 1340     		and	r3, r2
 286 0140 05D0     		beq	.L13
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 287              		.loc 1 272 0
 288 0142 3D4B     		ldr	r3, .L21+72
 289 0144 3C4A     		ldr	r2, .L21+72
 290 0146 1268     		ldr	r2, [r2]
 291 0148 2021     		mov	r1, #32
 292 014a 0A43     		orr	r2, r1
 293 014c 1A60     		str	r2, [r3]
 294              	.L13:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 11


 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 295              		.loc 1 275 0
 296 014e 3D4B     		ldr	r3, .L21+84
 297 0150 FA68     		ldr	r2, [r7, #12]
 298 0152 9200     		lsl	r2, r2, #2
 299 0154 D358     		ldr	r3, [r2, r3]
 300 0156 0222     		mov	r2, #2
 301 0158 1340     		and	r3, r2
 302 015a 05D0     		beq	.L12
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 303              		.loc 1 277 0
 304 015c 364B     		ldr	r3, .L21+72
 305 015e 364A     		ldr	r2, .L21+72
 306 0160 1268     		ldr	r2, [r2]
 307 0162 4021     		mov	r1, #64
 308 0164 0A43     		orr	r2, r1
 309 0166 1A60     		str	r2, [r3]
 310              	.L12:
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 311              		.loc 1 282 0
 312 0168 364B     		ldr	r3, .L21+84
 313 016a FA68     		ldr	r2, [r7, #12]
 314 016c 9200     		lsl	r2, r2, #2
 315 016e D258     		ldr	r2, [r2, r3]
 316 0170 8023     		mov	r3, #128
 317 0172 9B00     		lsl	r3, r3, #2
 318 0174 1340     		and	r3, r2
 319 0176 03D0     		beq	.L14
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 320              		.loc 1 284 0
 321 0178 8023     		mov	r3, #128
 322 017a 5B00     		lsl	r3, r3, #1
 323 017c BB60     		str	r3, [r7, #8]
 324 017e 02E0     		b	.L15
 325              	.L14:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 326              		.loc 1 288 0
 327 0180 8023     		mov	r3, #128
 328 0182 5B01     		lsl	r3, r3, #5
 329 0184 BB60     		str	r3, [r7, #8]
 330              	.L15:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 331              		.loc 1 291 0
 332 0186 2F4B     		ldr	r3, .L21+84
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 12


 333 0188 FA68     		ldr	r2, [r7, #12]
 334 018a 9200     		lsl	r2, r2, #2
 335 018c D258     		ldr	r2, [r2, r3]
 336 018e 8023     		mov	r3, #128
 337 0190 5B00     		lsl	r3, r3, #1
 338 0192 1340     		and	r3, r2
 339 0194 05D1     		bne	.L16
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 340              		.loc 1 298 0
 341 0196 2F4B     		ldr	r3, .L21+100
 342 0198 FA68     		ldr	r2, [r7, #12]
 343 019a 5200     		lsl	r2, r2, #1
 344 019c 0021     		mov	r1, #0
 345 019e D152     		strh	r1, [r2, r3]
 346 01a0 09E0     		b	.L17
 347              	.L16:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 348              		.loc 1 305 0
 349 01a2 BB68     		ldr	r3, [r7, #8]
 350 01a4 002B     		cmp	r3, #0
 351 01a6 00DA     		bge	.L18
 352 01a8 0133     		add	r3, r3, #1
 353              	.L18:
 354 01aa 5B10     		asr	r3, r3, #1
 355 01ac 99B2     		uxth	r1, r3
 356 01ae 294B     		ldr	r3, .L21+100
 357 01b0 FA68     		ldr	r2, [r7, #12]
 358 01b2 5200     		lsl	r2, r2, #1
 359 01b4 D152     		strh	r1, [r2, r3]
 360              	.L17:
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 361              		.loc 1 311 0 discriminator 2
 362 01b6 BB68     		ldr	r3, [r7, #8]
 363 01b8 274A     		ldr	r2, .L21+104
 364 01ba 5343     		mul	r3, r2
 365 01bc 8022     		mov	r2, #128
 366 01be D200     		lsl	r2, r2, #3
 367 01c0 9446     		mov	ip, r2
 368 01c2 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 13


 369              		.loc 1 312 0 discriminator 2
 370 01c4 002B     		cmp	r3, #0
 371 01c6 02DA     		bge	.L19
 372 01c8 244A     		ldr	r2, .L21+108
 373 01ca 9446     		mov	ip, r2
 374 01cc 6344     		add	r3, r3, ip
 375              	.L19:
 376 01ce DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 377              		.loc 1 311 0 discriminator 2
 378 01d0 9BB2     		uxth	r3, r3
 379 01d2 19B2     		sxth	r1, r3
 380 01d4 224B     		ldr	r3, .L21+112
 381 01d6 FA68     		ldr	r2, [r7, #12]
 382 01d8 9200     		lsl	r2, r2, #2
 383 01da D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 384              		.loc 1 232 0 discriminator 2
 385 01dc FB68     		ldr	r3, [r7, #12]
 386 01de 0133     		add	r3, r3, #1
 387 01e0 FB60     		str	r3, [r7, #12]
 388              	.L8:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 389              		.loc 1 232 0 is_stmt 0 discriminator 1
 390 01e2 FB68     		ldr	r3, [r7, #12]
 391 01e4 012B     		cmp	r3, #1
 392 01e6 00D8     		bhi	.LCB323
 393 01e8 61E7     		b	.L20	@long jump
 394              	.LCB323:
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 395              		.loc 1 314 0 is_stmt 1
 396 01ea BD46     		mov	sp, r7
 397 01ec 04B0     		add	sp, sp, #16
 398              		@ sp needed
 399 01ee 80BD     		pop	{r7, pc}
 400              	.L22:
 401              		.align	2
 402              	.L21:
 403 01f0 00000000 		.word	ADC_ISR
 404 01f4 20003A40 		.word	1077542944
 405 01f8 80033A40 		.word	1077543808
 406 01fc C0201013 		.word	319824064
 407 0200 C0200013 		.word	318775488
 408 0204 00003A40 		.word	1077542912
 409 0208 04003A40 		.word	1077542916
 410 020c C4000A80 		.word	-2146828092
 411 0210 18003A40 		.word	1077542936
 412 0214 0000FF07 		.word	134152192
 413 0218 1C003A40 		.word	1077542940
 414 021c 10003A40 		.word	1077542928
 415 0220 02000200 		.word	131074
 416 0224 14003A40 		.word	1077542932
 417 0228 00033A40 		.word	1077543680
 418 022c 40033A40 		.word	1077543744
 419 0230 28023A40 		.word	1077543464
 420 0234 38023A40 		.word	1077543480
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 14


 421 0238 18023A40 		.word	1077543448
 422 023c 30003A40 		.word	1077542960
 423 0240 FFFFFFDF 		.word	-536870913
 424 0244 00000000 		.word	ADC_channelsConfig
 425 0248 08000000 		.word	ADC_InputsPlacement.4770
 426 024c 80003A40 		.word	1077543040
 427 0250 80023A40 		.word	1077543552
 428 0254 00000000 		.word	ADC_offset
 429 0258 10270000 		.word	10000
 430 025c FF070000 		.word	2047
 431 0260 00000000 		.word	ADC_countsPer10Volt
 432              		.cfi_endproc
 433              	.LFE3:
 434              		.size	ADC_Init, .-ADC_Init
 435              		.section	.text.ADC_Enable,"ax",%progbits
 436              		.align	2
 437              		.global	ADC_Enable
 438              		.code	16
 439              		.thumb_func
 440              		.type	ADC_Enable, %function
 441              	ADC_Enable:
 442              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 443              		.loc 1 331 0
 444              		.cfi_startproc
 445 0000 80B5     		push	{r7, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 451              		.loc 1 332 0
 452 0004 0A4B     		ldr	r3, .L26
 453 0006 1B68     		ldr	r3, [r3]
 454 0008 002B     		cmp	r3, #0
 455 000a 0EDB     		blt	.L23
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 15


 456              		.loc 1 336 0
 457 000c C046     		mov	r8, r8
 458              	.L25:
 459              		.loc 1 336 0 is_stmt 0 discriminator 1
 460 000e 094B     		ldr	r3, .L26+4
 461 0010 1B68     		ldr	r3, [r3]
 462 0012 002B     		cmp	r3, #0
 463 0014 FBDB     		blt	.L25
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 464              		.loc 1 342 0 is_stmt 1
 465 0016 064B     		ldr	r3, .L26
 466 0018 054A     		ldr	r2, .L26
 467 001a 1268     		ldr	r2, [r2]
 468 001c 8021     		mov	r1, #128
 469 001e 0906     		lsl	r1, r1, #24
 470 0020 0A43     		orr	r2, r1
 471 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 472              		.loc 1 345 0
 473 0024 0A20     		mov	r0, #10
 474 0026 FFF7FEFF 		bl	CyDelayUs
 475              	.L23:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 476              		.loc 1 347 0
 477 002a BD46     		mov	sp, r7
 478              		@ sp needed
 479 002c 80BD     		pop	{r7, pc}
 480              	.L27:
 481 002e C046     		.align	2
 482              	.L26:
 483 0030 00003A40 		.word	1077542912
 484 0034 08023A40 		.word	1077543432
 485              		.cfi_endproc
 486              	.LFE4:
 487              		.size	ADC_Enable, .-ADC_Enable
 488              		.section	.text.ADC_Stop,"ax",%progbits
 489              		.align	2
 490              		.global	ADC_Stop
 491              		.code	16
 492              		.thumb_func
 493              		.type	ADC_Stop, %function
 494              	ADC_Stop:
 495              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 16


 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 496              		.loc 1 366 0
 497              		.cfi_startproc
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 504              		.loc 1 367 0
 505 0004 034B     		ldr	r3, .L29
 506 0006 034A     		ldr	r2, .L29
 507 0008 1268     		ldr	r2, [r2]
 508 000a 5200     		lsl	r2, r2, #1
 509 000c 5208     		lsr	r2, r2, #1
 510 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 511              		.loc 1 368 0
 512 0010 BD46     		mov	sp, r7
 513              		@ sp needed
 514 0012 80BD     		pop	{r7, pc}
 515              	.L30:
 516              		.align	2
 517              	.L29:
 518 0014 00003A40 		.word	1077542912
 519              		.cfi_endproc
 520              	.LFE5:
 521              		.size	ADC_Stop, .-ADC_Stop
 522              		.section	.text.ADC_StartConvert,"ax",%progbits
 523              		.align	2
 524              		.global	ADC_StartConvert
 525              		.code	16
 526              		.thumb_func
 527              		.type	ADC_StartConvert, %function
 528              	ADC_StartConvert:
 529              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 17


 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 530              		.loc 1 392 0
 531              		.cfi_startproc
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 538              		.loc 1 396 0
 539 0004 024B     		ldr	r3, .L32
 540 0006 0122     		mov	r2, #1
 541 0008 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 542              		.loc 1 399 0
 543 000a BD46     		mov	sp, r7
 544              		@ sp needed
 545 000c 80BD     		pop	{r7, pc}
 546              	.L33:
 547 000e C046     		.align	2
 548              	.L32:
 549 0010 24003A40 		.word	1077542948
 550              		.cfi_endproc
 551              	.LFE6:
 552              		.size	ADC_StartConvert, .-ADC_StartConvert
 553              		.section	.text.ADC_StopConvert,"ax",%progbits
 554              		.align	2
 555              		.global	ADC_StopConvert
 556              		.code	16
 557              		.thumb_func
 558              		.type	ADC_StopConvert, %function
 559              	ADC_StopConvert:
 560              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 18


 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 561              		.loc 1 417 0
 562              		.cfi_startproc
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 569              		.loc 1 421 0
 570 0004 BD46     		mov	sp, r7
 571              		@ sp needed
 572 0006 80BD     		pop	{r7, pc}
 573              		.cfi_endproc
 574              	.LFE7:
 575              		.size	ADC_StopConvert, .-ADC_StopConvert
 576              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 577              		.align	2
 578              		.global	ADC_IsEndConversion
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_IsEndConversion, %function
 582              	ADC_IsEndConversion:
 583              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 19


 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 584              		.loc 1 451 0
 585              		.cfi_startproc
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 84B0     		sub	sp, sp, #16
 591              		.cfi_def_cfa_offset 24
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 594 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 595              		.loc 1 452 0
 596 0008 0023     		mov	r3, #0
 597 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 598              		.loc 1 454 0
 599 000c 7B68     		ldr	r3, [r7, #4]
 600 000e 0322     		mov	r2, #3
 601 0010 1340     		and	r3, r2
 602 0012 11D0     		beq	.L36
 603              	.L38:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 604              		.loc 1 458 0 discriminator 2
 605 0014 184B     		ldr	r3, .L43
 606 0016 1B68     		ldr	r3, [r3]
 607 0018 0122     		mov	r2, #1
 608 001a 1340     		and	r3, r2
 609 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 610              		.loc 1 459 0 discriminator 2
 611 001e FB68     		ldr	r3, [r7, #12]
 612 0020 002B     		cmp	r3, #0
 613 0022 03D1     		bne	.L37
 614              		.loc 1 459 0 is_stmt 0 discriminator 1
 615 0024 7B68     		ldr	r3, [r7, #4]
 616 0026 0222     		mov	r2, #2
 617 0028 1340     		and	r3, r2
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 20


 618 002a F3D1     		bne	.L38
 619              	.L37:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 620              		.loc 1 461 0 is_stmt 1
 621 002c FB68     		ldr	r3, [r7, #12]
 622 002e 002B     		cmp	r3, #0
 623 0030 02D0     		beq	.L36
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 624              		.loc 1 464 0
 625 0032 114B     		ldr	r3, .L43
 626 0034 0122     		mov	r2, #1
 627 0036 1A60     		str	r2, [r3]
 628              	.L36:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 629              		.loc 1 469 0
 630 0038 7B68     		ldr	r3, [r7, #4]
 631 003a 0C22     		mov	r2, #12
 632 003c 1340     		and	r3, r2
 633 003e 15D0     		beq	.L39
 634              	.L41:
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 635              		.loc 1 473 0
 636 0040 0D4B     		ldr	r3, .L43
 637 0042 1B68     		ldr	r3, [r3]
 638 0044 1022     		mov	r2, #16
 639 0046 1340     		and	r3, r2
 640 0048 FA68     		ldr	r2, [r7, #12]
 641 004a 1343     		orr	r3, r2
 642 004c FB60     		str	r3, [r7, #12]
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 643              		.loc 1 474 0
 644 004e FB68     		ldr	r3, [r7, #12]
 645 0050 1022     		mov	r2, #16
 646 0052 1340     		and	r3, r2
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 647              		.loc 1 475 0
 648 0054 03D1     		bne	.L40
 649              		.loc 1 475 0 is_stmt 0 discriminator 1
 650 0056 7B68     		ldr	r3, [r7, #4]
 651 0058 0822     		mov	r2, #8
 652 005a 1340     		and	r3, r2
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 653              		.loc 1 474 0 is_stmt 1 discriminator 1
 654 005c F0D1     		bne	.L41
 655              	.L40:
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 21


 656              		.loc 1 477 0
 657 005e FB68     		ldr	r3, [r7, #12]
 658 0060 1022     		mov	r2, #16
 659 0062 1340     		and	r3, r2
 660 0064 02D0     		beq	.L39
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 661              		.loc 1 480 0
 662 0066 044B     		ldr	r3, .L43
 663 0068 1022     		mov	r2, #16
 664 006a 1A60     		str	r2, [r3]
 665              	.L39:
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 666              		.loc 1 485 0
 667 006c FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC.c **** }
 668              		.loc 1 486 0
 669 006e 181C     		mov	r0, r3
 670 0070 BD46     		mov	sp, r7
 671 0072 04B0     		add	sp, sp, #16
 672              		@ sp needed
 673 0074 80BD     		pop	{r7, pc}
 674              	.L44:
 675 0076 C046     		.align	2
 676              	.L43:
 677 0078 10023A40 		.word	1077543440
 678              		.cfi_endproc
 679              	.LFE8:
 680              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 681              		.section	.text.ADC_GetResult16,"ax",%progbits
 682              		.align	2
 683              		.global	ADC_GetResult16
 684              		.code	16
 685              		.thumb_func
 686              		.type	ADC_GetResult16, %function
 687              	ADC_GetResult16:
 688              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 22


 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 689              		.loc 1 505 0
 690              		.cfi_startproc
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 84B0     		sub	sp, sp, #16
 696              		.cfi_def_cfa_offset 24
 697 0004 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 699 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 700              		.loc 1 509 0
 701 0008 7B68     		ldr	r3, [r7, #4]
 702 000a 012B     		cmp	r3, #1
 703 000c 02D9     		bls	.L46
 704              		.loc 1 509 0 is_stmt 0 discriminator 1
 705 000e 0020     		mov	r0, #0
 706 0010 FFF7FEFF 		bl	CyHalt
 707              	.L46:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 708              		.loc 1 511 0 is_stmt 1
 709 0014 7B68     		ldr	r3, [r7, #4]
 710 0016 002B     		cmp	r3, #0
 711 0018 09D1     		bne	.L47
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 712              		.loc 1 513 0
 713 001a 7B68     		ldr	r3, [r7, #4]
 714 001c 9B00     		lsl	r3, r3, #2
 715 001e 0A4A     		ldr	r2, .L50
 716 0020 9446     		mov	ip, r2
 717 0022 6344     		add	r3, r3, ip
 718 0024 1B68     		ldr	r3, [r3]
 719 0026 1B04     		lsl	r3, r3, #16
 720 0028 1B0C     		lsr	r3, r3, #16
 721 002a FB60     		str	r3, [r7, #12]
 722 002c 04E0     		b	.L48
 723              	.L47:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 724              		.loc 1 519 0
 725 002e 074B     		ldr	r3, .L50+4
 726 0030 1B68     		ldr	r3, [r3]
 727 0032 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 23


 728 0034 1B0C     		lsr	r3, r3, #16
 729 0036 FB60     		str	r3, [r7, #12]
 730              	.L48:
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 731              		.loc 1 525 0
 732 0038 FB68     		ldr	r3, [r7, #12]
 733 003a 9BB2     		uxth	r3, r3
 734 003c 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC.c **** }
 735              		.loc 1 526 0
 736 003e 181C     		mov	r0, r3
 737 0040 BD46     		mov	sp, r7
 738 0042 04B0     		add	sp, sp, #16
 739              		@ sp needed
 740 0044 80BD     		pop	{r7, pc}
 741              	.L51:
 742 0046 C046     		.align	2
 743              	.L50:
 744 0048 80013A40 		.word	1077543296
 745 004c 90023A40 		.word	1077543568
 746              		.cfi_endproc
 747              	.LFE9:
 748              		.size	ADC_GetResult16, .-ADC_GetResult16
 749              		.section	.text.ADC_SetChanMask,"ax",%progbits
 750              		.align	2
 751              		.global	ADC_SetChanMask
 752              		.code	16
 753              		.thumb_func
 754              		.type	ADC_SetChanMask, %function
 755              	ADC_SetChanMask:
 756              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 24


 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 757              		.loc 1 550 0
 758              		.cfi_startproc
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 82B0     		sub	sp, sp, #8
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 768              		.loc 1 551 0
 769 0008 034B     		ldr	r3, .L53
 770 000a 7A68     		ldr	r2, [r7, #4]
 771 000c 0121     		mov	r1, #1
 772 000e 0A40     		and	r2, r1
 773 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 774              		.loc 1 552 0
 775 0012 BD46     		mov	sp, r7
 776 0014 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 0016 80BD     		pop	{r7, pc}
 779              	.L54:
 780              		.align	2
 781              	.L53:
 782 0018 20003A40 		.word	1077542944
 783              		.cfi_endproc
 784              	.LFE10:
 785              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 786              		.section	.text.ADC_EnableInjection,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_EnableInjection
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_EnableInjection, %function
 792              	ADC_EnableInjection:
 793              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 25


 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 794              		.loc 1 572 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 802              		.loc 1 573 0
 803 0004 044B     		ldr	r3, .L56
 804 0006 044A     		ldr	r2, .L56
 805 0008 1268     		ldr	r2, [r2]
 806 000a 8021     		mov	r1, #128
 807 000c 0906     		lsl	r1, r1, #24
 808 000e 0A43     		orr	r2, r1
 809 0010 1A60     		str	r2, [r3]
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 810              		.loc 1 574 0
 811 0012 BD46     		mov	sp, r7
 812              		@ sp needed
 813 0014 80BD     		pop	{r7, pc}
 814              	.L57:
 815 0016 C046     		.align	2
 816              	.L56:
 817 0018 80023A40 		.word	1077543552
 818              		.cfi_endproc
 819              	.LFE11:
 820              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 821              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 822              		.align	2
 823              		.global	ADC_SetLowLimit
 824              		.code	16
 825              		.thumb_func
 826              		.type	ADC_SetLowLimit, %function
 827              	ADC_SetLowLimit:
 828              	.LFB12:
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 26


 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 829              		.loc 1 594 0
 830              		.cfi_startproc
 831 0000 80B5     		push	{r7, lr}
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 82B0     		sub	sp, sp, #8
 836              		.cfi_def_cfa_offset 16
 837 0004 00AF     		add	r7, sp, #0
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 840              		.loc 1 595 0
 841 0008 084B     		ldr	r3, .L59
 842 000a 084A     		ldr	r2, .L59
 843 000c 1268     		ldr	r2, [r2]
 844 000e 120C     		lsr	r2, r2, #16
 845 0010 1204     		lsl	r2, r2, #16
 846 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 847              		.loc 1 596 0
 848 0014 054B     		ldr	r3, .L59
 849 0016 054A     		ldr	r2, .L59
 850 0018 1168     		ldr	r1, [r2]
 851 001a 7A68     		ldr	r2, [r7, #4]
 852 001c 1204     		lsl	r2, r2, #16
 853 001e 120C     		lsr	r2, r2, #16
 854 0020 0A43     		orr	r2, r1
 855 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 856              		.loc 1 597 0
 857 0024 BD46     		mov	sp, r7
 858 0026 02B0     		add	sp, sp, #8
 859              		@ sp needed
 860 0028 80BD     		pop	{r7, pc}
 861              	.L60:
 862 002a C046     		.align	2
 863              	.L59:
 864 002c 18003A40 		.word	1077542936
 865              		.cfi_endproc
 866              	.LFE12:
 867              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 868              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 869              		.align	2
 870              		.global	ADC_SetHighLimit
 871              		.code	16
 872              		.thumb_func
 873              		.type	ADC_SetHighLimit, %function
 874              	ADC_SetHighLimit:
 875              	.LFB13:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 27


 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 876              		.loc 1 615 0
 877              		.cfi_startproc
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 887              		.loc 1 616 0
 888 0008 074B     		ldr	r3, .L62
 889 000a 074A     		ldr	r2, .L62
 890 000c 1268     		ldr	r2, [r2]
 891 000e 1204     		lsl	r2, r2, #16
 892 0010 120C     		lsr	r2, r2, #16
 893 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 894              		.loc 1 617 0
 895 0014 044B     		ldr	r3, .L62
 896 0016 044A     		ldr	r2, .L62
 897 0018 1168     		ldr	r1, [r2]
 898 001a 7A68     		ldr	r2, [r7, #4]
 899 001c 1204     		lsl	r2, r2, #16
 900 001e 0A43     		orr	r2, r1
 901 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 902              		.loc 1 618 0
 903 0022 BD46     		mov	sp, r7
 904 0024 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 0026 80BD     		pop	{r7, pc}
 907              	.L63:
 908              		.align	2
 909              	.L62:
 910 0028 18003A40 		.word	1077542936
 911              		.cfi_endproc
 912              	.LFE13:
 913              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 28


 914              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 915              		.align	2
 916              		.global	ADC_SetLimitMask
 917              		.code	16
 918              		.thumb_func
 919              		.type	ADC_SetLimitMask, %function
 920              	ADC_SetLimitMask:
 921              	.LFB14:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 922              		.loc 1 639 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 82B0     		sub	sp, sp, #8
 929              		.cfi_def_cfa_offset 16
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 932 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 933              		.loc 1 640 0
 934 0008 034B     		ldr	r3, .L65
 935 000a 7A68     		ldr	r2, [r7, #4]
 936 000c 0121     		mov	r1, #1
 937 000e 0A40     		and	r2, r1
 938 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 939              		.loc 1 641 0
 940 0012 BD46     		mov	sp, r7
 941 0014 02B0     		add	sp, sp, #8
 942              		@ sp needed
 943 0016 80BD     		pop	{r7, pc}
 944              	.L66:
 945              		.align	2
 946              	.L65:
 947 0018 38023A40 		.word	1077543480
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 29


 948              		.cfi_endproc
 949              	.LFE14:
 950              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 951              		.section	.text.ADC_SetSatMask,"ax",%progbits
 952              		.align	2
 953              		.global	ADC_SetSatMask
 954              		.code	16
 955              		.thumb_func
 956              		.type	ADC_SetSatMask, %function
 957              	ADC_SetSatMask:
 958              	.LFB15:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 959              		.loc 1 662 0
 960              		.cfi_startproc
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 82B0     		sub	sp, sp, #8
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 970              		.loc 1 663 0
 971 0008 034B     		ldr	r3, .L68
 972 000a 7A68     		ldr	r2, [r7, #4]
 973 000c 0121     		mov	r1, #1
 974 000e 0A40     		and	r2, r1
 975 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 976              		.loc 1 664 0
 977 0012 BD46     		mov	sp, r7
 978 0014 02B0     		add	sp, sp, #8
 979              		@ sp needed
 980 0016 80BD     		pop	{r7, pc}
 981              	.L69:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 30


 982              		.align	2
 983              	.L68:
 984 0018 28023A40 		.word	1077543464
 985              		.cfi_endproc
 986              	.LFE15:
 987              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 988              		.section	.text.ADC_SetOffset,"ax",%progbits
 989              		.align	2
 990              		.global	ADC_SetOffset
 991              		.code	16
 992              		.thumb_func
 993              		.type	ADC_SetOffset, %function
 994              	ADC_SetOffset:
 995              	.LFB16:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 996              		.loc 1 690 0
 997              		.cfi_startproc
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 0006 7860     		str	r0, [r7, #4]
 1007 0008 0A1C     		mov	r2, r1
 1008 000a BB1C     		add	r3, r7, #2
 1009 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1010              		.loc 1 692 0
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 31


 1011 000e 7B68     		ldr	r3, [r7, #4]
 1012 0010 012B     		cmp	r3, #1
 1013 0012 02D9     		bls	.L71
 1014              		.loc 1 692 0 is_stmt 0 discriminator 1
 1015 0014 0020     		mov	r0, #0
 1016 0016 FFF7FEFF 		bl	CyHalt
 1017              	.L71:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 1018              		.loc 1 694 0 is_stmt 1
 1019 001a 044B     		ldr	r3, .L72
 1020 001c 7A68     		ldr	r2, [r7, #4]
 1021 001e 5200     		lsl	r2, r2, #1
 1022 0020 B91C     		add	r1, r7, #2
 1023 0022 0988     		ldrh	r1, [r1]
 1024 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 1025              		.loc 1 695 0
 1026 0026 BD46     		mov	sp, r7
 1027 0028 02B0     		add	sp, sp, #8
 1028              		@ sp needed
 1029 002a 80BD     		pop	{r7, pc}
 1030              	.L73:
 1031              		.align	2
 1032              	.L72:
 1033 002c 00000000 		.word	ADC_offset
 1034              		.cfi_endproc
 1035              	.LFE16:
 1036              		.size	ADC_SetOffset, .-ADC_SetOffset
 1037              		.section	.text.ADC_SetGain,"ax",%progbits
 1038              		.align	2
 1039              		.global	ADC_SetGain
 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	ADC_SetGain, %function
 1043              	ADC_SetGain:
 1044              	.LFB17:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 32


 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 1045              		.loc 1 724 0
 1046              		.cfi_startproc
 1047 0000 80B5     		push	{r7, lr}
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 7, -8
 1050              		.cfi_offset 14, -4
 1051 0002 82B0     		sub	sp, sp, #8
 1052              		.cfi_def_cfa_offset 16
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 1055 0006 7860     		str	r0, [r7, #4]
 1056 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1057              		.loc 1 726 0
 1058 000a 7B68     		ldr	r3, [r7, #4]
 1059 000c 012B     		cmp	r3, #1
 1060 000e 02D9     		bls	.L75
 1061              		.loc 1 726 0 is_stmt 0 discriminator 1
 1062 0010 0020     		mov	r0, #0
 1063 0012 FFF7FEFF 		bl	CyHalt
 1064              	.L75:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 1065              		.loc 1 728 0 is_stmt 1
 1066 0016 044B     		ldr	r3, .L76
 1067 0018 7A68     		ldr	r2, [r7, #4]
 1068 001a 9200     		lsl	r2, r2, #2
 1069 001c 3968     		ldr	r1, [r7]
 1070 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 1071              		.loc 1 729 0
 1072 0020 BD46     		mov	sp, r7
 1073 0022 02B0     		add	sp, sp, #8
 1074              		@ sp needed
 1075 0024 80BD     		pop	{r7, pc}
 1076              	.L77:
 1077 0026 C046     		.align	2
 1078              	.L76:
 1079 0028 00000000 		.word	ADC_countsPer10Volt
 1080              		.cfi_endproc
 1081              	.LFE17:
 1082              		.size	ADC_SetGain, .-ADC_SetGain
 1083              		.global	__aeabi_idiv
 1084              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1085              		.align	2
 1086              		.global	ADC_CountsTo_mVolts
 1087              		.code	16
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 33


 1088              		.thumb_func
 1089              		.type	ADC_CountsTo_mVolts, %function
 1090              	ADC_CountsTo_mVolts:
 1091              	.LFB18:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 1092              		.loc 1 757 0
 1093              		.cfi_startproc
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 84B0     		sub	sp, sp, #16
 1099              		.cfi_def_cfa_offset 24
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 7860     		str	r0, [r7, #4]
 1103 0008 0A1C     		mov	r2, r1
 1104 000a BB1C     		add	r3, r7, #2
 1105 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1106              		.loc 1 761 0
 1107 000e 7B68     		ldr	r3, [r7, #4]
 1108 0010 012B     		cmp	r3, #1
 1109 0012 02D9     		bls	.L79
 1110              		.loc 1 761 0 is_stmt 0 discriminator 1
 1111 0014 0020     		mov	r0, #0
 1112 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 34


 1113              	.L79:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1114              		.loc 1 772 0 is_stmt 1
 1115 001a 1F4B     		ldr	r3, .L85
 1116 001c 7A68     		ldr	r2, [r7, #4]
 1117 001e 5200     		lsl	r2, r2, #1
 1118 0020 D35A     		ldrh	r3, [r2, r3]
 1119 0022 99B2     		uxth	r1, r3
 1120 0024 BB1C     		add	r3, r7, #2
 1121 0026 1A88     		ldrh	r2, [r3]
 1122 0028 8BB2     		uxth	r3, r1
 1123 002a D31A     		sub	r3, r2, r3
 1124 002c 9AB2     		uxth	r2, r3
 1125 002e BB1C     		add	r3, r7, #2
 1126 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1127              		.loc 1 774 0
 1128 0032 BB1C     		add	r3, r7, #2
 1129 0034 0022     		mov	r2, #0
 1130 0036 9B5E     		ldrsh	r3, [r3, r2]
 1131 0038 184A     		ldr	r2, .L85+4
 1132 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1133              		.loc 1 775 0
 1134 003c BB1C     		add	r3, r7, #2
 1135 003e 0021     		mov	r1, #0
 1136 0040 5B5E     		ldrsh	r3, [r3, r1]
 1137 0042 002B     		cmp	r3, #0
 1138 0044 08DD     		ble	.L80
 1139              		.loc 1 775 0 is_stmt 0 discriminator 1
 1140 0046 164B     		ldr	r3, .L85+8
 1141 0048 7968     		ldr	r1, [r7, #4]
 1142 004a 8900     		lsl	r1, r1, #2
 1143 004c CB58     		ldr	r3, [r1, r3]
 1144 004e 002B     		cmp	r3, #0
 1145 0050 00DA     		bge	.L81
 1146 0052 0133     		add	r3, r3, #1
 1147              	.L81:
 1148 0054 5B10     		asr	r3, r3, #1
 1149 0056 08E0     		b	.L82
 1150              	.L80:
 1151              		.loc 1 775 0 discriminator 2
 1152 0058 114B     		ldr	r3, .L85+8
 1153 005a 7968     		ldr	r1, [r7, #4]
 1154 005c 8900     		lsl	r1, r1, #2
 1155 005e CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 35


 1156 0060 002B     		cmp	r3, #0
 1157 0062 00DA     		bge	.L83
 1158 0064 0133     		add	r3, r3, #1
 1159              	.L83:
 1160 0066 5B10     		asr	r3, r3, #1
 1161 0068 5B42     		neg	r3, r3
 1162              	.L82:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1163              		.loc 1 774 0 is_stmt 1
 1164 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1165              		.loc 1 776 0
 1166 006c 0C4B     		ldr	r3, .L85+8
 1167 006e 7A68     		ldr	r2, [r7, #4]
 1168 0070 9200     		lsl	r2, r2, #2
 1169 0072 D358     		ldr	r3, [r2, r3]
 1170 0074 081C     		mov	r0, r1
 1171 0076 191C     		mov	r1, r3
 1172 0078 FFF7FEFF 		bl	__aeabi_idiv
 1173 007c 031C     		mov	r3, r0
 1174 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1175              		.loc 1 774 0
 1176 0080 0E23     		mov	r3, #14
 1177 0082 FB18     		add	r3, r7, r3
 1178 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1179              		.loc 1 778 0
 1180 0086 0E23     		mov	r3, #14
 1181 0088 FB18     		add	r3, r7, r3
 1182 008a 1B88     		ldrh	r3, [r3]
 1183 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 1184              		.loc 1 779 0
 1185 008e 181C     		mov	r0, r3
 1186 0090 BD46     		mov	sp, r7
 1187 0092 04B0     		add	sp, sp, #16
 1188              		@ sp needed
 1189 0094 80BD     		pop	{r7, pc}
 1190              	.L86:
 1191 0096 C046     		.align	2
 1192              	.L85:
 1193 0098 00000000 		.word	ADC_offset
 1194 009c 10270000 		.word	10000
 1195 00a0 00000000 		.word	ADC_countsPer10Volt
 1196              		.cfi_endproc
 1197              	.LFE18:
 1198              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1199              		.global	__aeabi_lmul
 1200              		.global	__aeabi_ldivmod
 1201              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1202              		.align	2
 1203              		.global	ADC_CountsTo_uVolts
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	ADC_CountsTo_uVolts, %function
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 36


 1207              	ADC_CountsTo_uVolts:
 1208              	.LFB19:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 1209              		.loc 1 811 0
 1210              		.cfi_startproc
 1211 0000 B0B5     		push	{r4, r5, r7, lr}
 1212              		.cfi_def_cfa_offset 16
 1213              		.cfi_offset 4, -16
 1214              		.cfi_offset 5, -12
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 86B0     		sub	sp, sp, #24
 1218              		.cfi_def_cfa_offset 40
 1219 0004 00AF     		add	r7, sp, #0
 1220              		.cfi_def_cfa_register 7
 1221 0006 F860     		str	r0, [r7, #12]
 1222 0008 0A1C     		mov	r2, r1
 1223 000a 0A23     		mov	r3, #10
 1224 000c FB18     		add	r3, r7, r3
 1225 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1226              		.loc 1 815 0
 1227 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 37


 1228 0012 012B     		cmp	r3, #1
 1229 0014 02D9     		bls	.L88
 1230              		.loc 1 815 0 is_stmt 0 discriminator 1
 1231 0016 0020     		mov	r0, #0
 1232 0018 FFF7FEFF 		bl	CyHalt
 1233              	.L88:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1234              		.loc 1 826 0 is_stmt 1
 1235 001c 194B     		ldr	r3, .L90
 1236 001e FA68     		ldr	r2, [r7, #12]
 1237 0020 5200     		lsl	r2, r2, #1
 1238 0022 D35A     		ldrh	r3, [r2, r3]
 1239 0024 99B2     		uxth	r1, r3
 1240 0026 0A23     		mov	r3, #10
 1241 0028 FB18     		add	r3, r7, r3
 1242 002a 1A88     		ldrh	r2, [r3]
 1243 002c 8BB2     		uxth	r3, r1
 1244 002e D31A     		sub	r3, r2, r3
 1245 0030 9AB2     		uxth	r2, r3
 1246 0032 0A23     		mov	r3, #10
 1247 0034 FB18     		add	r3, r7, r3
 1248 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1249              		.loc 1 828 0
 1250 0038 0A23     		mov	r3, #10
 1251 003a FB18     		add	r3, r7, r3
 1252 003c 1B88     		ldrh	r3, [r3]
 1253 003e 1BB2     		sxth	r3, r3
 1254 0040 3B60     		str	r3, [r7]
 1255 0042 DB17     		asr	r3, r3, #31
 1256 0044 7B60     		str	r3, [r7, #4]
 1257 0046 3868     		ldr	r0, [r7]
 1258 0048 7968     		ldr	r1, [r7, #4]
 1259 004a 0F4A     		ldr	r2, .L90+4
 1260 004c 0023     		mov	r3, #0
 1261 004e FFF7FEFF 		bl	__aeabi_lmul
 1262 0052 021C     		mov	r2, r0
 1263 0054 0B1C     		mov	r3, r1
 1264 0056 101C     		mov	r0, r2
 1265 0058 191C     		mov	r1, r3
 1266 005a 0C4B     		ldr	r3, .L90+8
 1267 005c FA68     		ldr	r2, [r7, #12]
 1268 005e 9200     		lsl	r2, r2, #2
 1269 0060 D358     		ldr	r3, [r2, r3]
 1270 0062 1C1C     		mov	r4, r3
 1271 0064 DB17     		asr	r3, r3, #31
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 38


 1272 0066 1D1C     		mov	r5, r3
 1273 0068 221C     		mov	r2, r4
 1274 006a 2B1C     		mov	r3, r5
 1275 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1276 0070 031C     		mov	r3, r0
 1277 0072 0C1C     		mov	r4, r1
 1278 0074 3B61     		str	r3, [r7, #16]
 1279 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1280              		.loc 1 830 0
 1281 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1282              		.loc 1 831 0
 1283 007a 181C     		mov	r0, r3
 1284 007c BD46     		mov	sp, r7
 1285 007e 06B0     		add	sp, sp, #24
 1286              		@ sp needed
 1287 0080 B0BD     		pop	{r4, r5, r7, pc}
 1288              	.L91:
 1289 0082 C046     		.align	2
 1290              	.L90:
 1291 0084 00000000 		.word	ADC_offset
 1292 0088 80969800 		.word	10000000
 1293 008c 00000000 		.word	ADC_countsPer10Volt
 1294              		.cfi_endproc
 1295              	.LFE19:
 1296              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1297              		.global	__aeabi_i2f
 1298              		.global	__aeabi_fmul
 1299              		.global	__aeabi_fdiv
 1300              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1301              		.align	2
 1302              		.global	ADC_CountsTo_Volts
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	ADC_CountsTo_Volts, %function
 1306              	ADC_CountsTo_Volts:
 1307              	.LFB20:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 39


 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1308              		.loc 1 856 0
 1309              		.cfi_startproc
 1310 0000 90B5     		push	{r4, r7, lr}
 1311              		.cfi_def_cfa_offset 12
 1312              		.cfi_offset 4, -12
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 85B0     		sub	sp, sp, #20
 1316              		.cfi_def_cfa_offset 32
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
 1319 0006 7860     		str	r0, [r7, #4]
 1320 0008 0A1C     		mov	r2, r1
 1321 000a BB1C     		add	r3, r7, #2
 1322 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1323              		.loc 1 860 0
 1324 000e 7B68     		ldr	r3, [r7, #4]
 1325 0010 012B     		cmp	r3, #1
 1326 0012 02D9     		bls	.L93
 1327              		.loc 1 860 0 is_stmt 0 discriminator 1
 1328 0014 0020     		mov	r0, #0
 1329 0016 FFF7FEFF 		bl	CyHalt
 1330              	.L93:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1331              		.loc 1 871 0 is_stmt 1
 1332 001a 164B     		ldr	r3, .L95
 1333 001c 7A68     		ldr	r2, [r7, #4]
 1334 001e 5200     		lsl	r2, r2, #1
 1335 0020 D35A     		ldrh	r3, [r2, r3]
 1336 0022 99B2     		uxth	r1, r3
 1337 0024 BB1C     		add	r3, r7, #2
 1338 0026 1A88     		ldrh	r2, [r3]
 1339 0028 8BB2     		uxth	r3, r1
 1340 002a D31A     		sub	r3, r2, r3
 1341 002c 9AB2     		uxth	r2, r3
 1342 002e BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 40


 1343 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1344              		.loc 1 873 0
 1345 0032 BB1C     		add	r3, r7, #2
 1346 0034 0022     		mov	r2, #0
 1347 0036 9B5E     		ldrsh	r3, [r3, r2]
 1348 0038 181C     		mov	r0, r3
 1349 003a FFF7FEFF 		bl	__aeabi_i2f
 1350 003e 031C     		add	r3, r0, #0
 1351 0040 181C     		add	r0, r3, #0
 1352 0042 0D49     		ldr	r1, .L95+4
 1353 0044 FFF7FEFF 		bl	__aeabi_fmul
 1354 0048 031C     		add	r3, r0, #0
 1355 004a 1C1C     		add	r4, r3, #0
 1356 004c 0B4B     		ldr	r3, .L95+8
 1357 004e 7A68     		ldr	r2, [r7, #4]
 1358 0050 9200     		lsl	r2, r2, #2
 1359 0052 D358     		ldr	r3, [r2, r3]
 1360 0054 181C     		mov	r0, r3
 1361 0056 FFF7FEFF 		bl	__aeabi_i2f
 1362 005a 031C     		add	r3, r0, #0
 1363 005c 201C     		add	r0, r4, #0
 1364 005e 191C     		add	r1, r3, #0
 1365 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1366 0064 031C     		add	r3, r0, #0
 1367 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1368              		.loc 1 875 0
 1369 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1370              		.loc 1 876 0
 1371 006a 181C     		add	r0, r3, #0
 1372 006c BD46     		mov	sp, r7
 1373 006e 05B0     		add	sp, sp, #20
 1374              		@ sp needed
 1375 0070 90BD     		pop	{r4, r7, pc}
 1376              	.L96:
 1377 0072 C046     		.align	2
 1378              	.L95:
 1379 0074 00000000 		.word	ADC_offset
 1380 0078 00002041 		.word	1092616192
 1381 007c 00000000 		.word	ADC_countsPer10Volt
 1382              		.cfi_endproc
 1383              	.LFE20:
 1384              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1385              		.section	.rodata
 1386              		.align	2
 1387              		.type	ADC_InputsPlacement.4770, %object
 1388              		.size	ADC_InputsPlacement.4770, 2
 1389              	ADC_InputsPlacement.4770:
 1390 0008 00       		.byte	0
 1391 0009 70       		.byte	112
 1392 000a 0000     		.text
 1393              	.Letext0:
 1394              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 41


 1395              		.section	.debug_info,"",%progbits
 1396              	.Ldebug_info0:
 1397 0000 AF040000 		.4byte	0x4af
 1398 0004 0400     		.2byte	0x4
 1399 0006 00000000 		.4byte	.Ldebug_abbrev0
 1400 000a 04       		.byte	0x4
 1401 000b 01       		.uleb128 0x1
 1402 000c 11030000 		.4byte	.LASF61
 1403 0010 01       		.byte	0x1
 1404 0011 2C020000 		.4byte	.LASF62
 1405 0015 77020000 		.4byte	.LASF63
 1406 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1407 001d 00000000 		.4byte	0
 1408 0021 00000000 		.4byte	.Ldebug_line0
 1409 0025 02       		.uleb128 0x2
 1410 0026 01       		.byte	0x1
 1411 0027 06       		.byte	0x6
 1412 0028 7C000000 		.4byte	.LASF0
 1413 002c 02       		.uleb128 0x2
 1414 002d 01       		.byte	0x1
 1415 002e 08       		.byte	0x8
 1416 002f 4B020000 		.4byte	.LASF1
 1417 0033 02       		.uleb128 0x2
 1418 0034 02       		.byte	0x2
 1419 0035 05       		.byte	0x5
 1420 0036 64020000 		.4byte	.LASF2
 1421 003a 02       		.uleb128 0x2
 1422 003b 02       		.byte	0x2
 1423 003c 07       		.byte	0x7
 1424 003d 53010000 		.4byte	.LASF3
 1425 0041 02       		.uleb128 0x2
 1426 0042 04       		.byte	0x4
 1427 0043 05       		.byte	0x5
 1428 0044 9F000000 		.4byte	.LASF4
 1429 0048 02       		.uleb128 0x2
 1430 0049 04       		.byte	0x4
 1431 004a 07       		.byte	0x7
 1432 004b 22010000 		.4byte	.LASF5
 1433 004f 02       		.uleb128 0x2
 1434 0050 08       		.byte	0x8
 1435 0051 05       		.byte	0x5
 1436 0052 6E000000 		.4byte	.LASF6
 1437 0056 02       		.uleb128 0x2
 1438 0057 08       		.byte	0x8
 1439 0058 07       		.byte	0x7
 1440 0059 32000000 		.4byte	.LASF7
 1441 005d 03       		.uleb128 0x3
 1442 005e 04       		.byte	0x4
 1443 005f 05       		.byte	0x5
 1444 0060 696E7400 		.ascii	"int\000"
 1445 0064 02       		.uleb128 0x2
 1446 0065 04       		.byte	0x4
 1447 0066 07       		.byte	0x7
 1448 0067 0E010000 		.4byte	.LASF8
 1449 006b 04       		.uleb128 0x4
 1450 006c D0000000 		.4byte	.LASF9
 1451 0070 02       		.byte	0x2
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 42


 1452 0071 3801     		.2byte	0x138
 1453 0073 2C000000 		.4byte	0x2c
 1454 0077 04       		.uleb128 0x4
 1455 0078 00000000 		.4byte	.LASF10
 1456 007c 02       		.byte	0x2
 1457 007d 3901     		.2byte	0x139
 1458 007f 3A000000 		.4byte	0x3a
 1459 0083 04       		.uleb128 0x4
 1460 0084 DD000000 		.4byte	.LASF11
 1461 0088 02       		.byte	0x2
 1462 0089 3A01     		.2byte	0x13a
 1463 008b 48000000 		.4byte	0x48
 1464 008f 04       		.uleb128 0x4
 1465 0090 FD020000 		.4byte	.LASF12
 1466 0094 02       		.byte	0x2
 1467 0095 3C01     		.2byte	0x13c
 1468 0097 33000000 		.4byte	0x33
 1469 009b 04       		.uleb128 0x4
 1470 009c 8F000000 		.4byte	.LASF13
 1471 00a0 02       		.byte	0x2
 1472 00a1 3D01     		.2byte	0x13d
 1473 00a3 41000000 		.4byte	0x41
 1474 00a7 04       		.uleb128 0x4
 1475 00a8 83010000 		.4byte	.LASF14
 1476 00ac 02       		.byte	0x2
 1477 00ad 3E01     		.2byte	0x13e
 1478 00af B3000000 		.4byte	0xb3
 1479 00b3 02       		.uleb128 0x2
 1480 00b4 04       		.byte	0x4
 1481 00b5 04       		.byte	0x4
 1482 00b6 F8010000 		.4byte	.LASF15
 1483 00ba 02       		.uleb128 0x2
 1484 00bb 08       		.byte	0x8
 1485 00bc 04       		.byte	0x4
 1486 00bd D6000000 		.4byte	.LASF16
 1487 00c1 04       		.uleb128 0x4
 1488 00c2 D6010000 		.4byte	.LASF17
 1489 00c6 02       		.byte	0x2
 1490 00c7 4301     		.2byte	0x143
 1491 00c9 4F000000 		.4byte	0x4f
 1492 00cd 02       		.uleb128 0x2
 1493 00ce 01       		.byte	0x1
 1494 00cf 08       		.byte	0x8
 1495 00d0 C9020000 		.4byte	.LASF18
 1496 00d4 04       		.uleb128 0x4
 1497 00d5 7D010000 		.4byte	.LASF19
 1498 00d9 02       		.byte	0x2
 1499 00da E401     		.2byte	0x1e4
 1500 00dc E0000000 		.4byte	0xe0
 1501 00e0 05       		.uleb128 0x5
 1502 00e1 83000000 		.4byte	0x83
 1503 00e5 02       		.uleb128 0x2
 1504 00e6 04       		.byte	0x4
 1505 00e7 07       		.byte	0x7
 1506 00e8 8B010000 		.4byte	.LASF20
 1507 00ec 06       		.uleb128 0x6
 1508 00ed 95000000 		.4byte	.LASF25
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 43


 1509 00f1 01       		.byte	0x1
 1510 00f2 3F       		.byte	0x3f
 1511 00f3 00000000 		.4byte	.LFB2
 1512 00f7 24000000 		.4byte	.LFE2-.LFB2
 1513 00fb 01       		.uleb128 0x1
 1514 00fc 9C       		.byte	0x9c
 1515 00fd 07       		.uleb128 0x7
 1516 00fe 29000000 		.4byte	.LASF36
 1517 0102 01       		.byte	0x1
 1518 0103 5E       		.byte	0x5e
 1519 0104 00000000 		.4byte	.LFB3
 1520 0108 64020000 		.4byte	.LFE3-.LFB3
 1521 010c 01       		.uleb128 0x1
 1522 010d 9C       		.byte	0x9c
 1523 010e 4E010000 		.4byte	0x14e
 1524 0112 08       		.uleb128 0x8
 1525 0113 BE020000 		.4byte	.LASF21
 1526 0117 01       		.byte	0x1
 1527 0118 60       		.byte	0x60
 1528 0119 83000000 		.4byte	0x83
 1529 011d 02       		.uleb128 0x2
 1530 011e 91       		.byte	0x91
 1531 011f 74       		.sleb128 -12
 1532 0120 08       		.uleb128 0x8
 1533 0121 49010000 		.4byte	.LASF22
 1534 0125 01       		.byte	0x1
 1535 0126 61       		.byte	0x61
 1536 0127 83000000 		.4byte	0x83
 1537 012b 02       		.uleb128 0x2
 1538 012c 91       		.byte	0x91
 1539 012d 6C       		.sleb128 -20
 1540 012e 08       		.uleb128 0x8
 1541 012f 0F000000 		.4byte	.LASF23
 1542 0133 01       		.byte	0x1
 1543 0134 62       		.byte	0x62
 1544 0135 9B000000 		.4byte	0x9b
 1545 0139 02       		.uleb128 0x2
 1546 013a 91       		.byte	0x91
 1547 013b 70       		.sleb128 -16
 1548 013c 08       		.uleb128 0x8
 1549 013d 49000000 		.4byte	.LASF24
 1550 0141 01       		.byte	0x1
 1551 0142 65       		.byte	0x65
 1552 0143 5E010000 		.4byte	0x15e
 1553 0147 05       		.uleb128 0x5
 1554 0148 03       		.byte	0x3
 1555 0149 08000000 		.4byte	ADC_InputsPlacement.4770
 1556 014d 00       		.byte	0
 1557 014e 09       		.uleb128 0x9
 1558 014f 6B000000 		.4byte	0x6b
 1559 0153 5E010000 		.4byte	0x15e
 1560 0157 0A       		.uleb128 0xa
 1561 0158 E5000000 		.4byte	0xe5
 1562 015c 01       		.byte	0x1
 1563 015d 00       		.byte	0
 1564 015e 0B       		.uleb128 0xb
 1565 015f 4E010000 		.4byte	0x14e
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 44


 1566 0163 0C       		.uleb128 0xc
 1567 0164 F2020000 		.4byte	.LASF26
 1568 0168 01       		.byte	0x1
 1569 0169 4A01     		.2byte	0x14a
 1570 016b 00000000 		.4byte	.LFB4
 1571 016f 38000000 		.4byte	.LFE4-.LFB4
 1572 0173 01       		.uleb128 0x1
 1573 0174 9C       		.byte	0x9c
 1574 0175 0D       		.uleb128 0xd
 1575 0176 6E020000 		.4byte	.LASF27
 1576 017a 01       		.byte	0x1
 1577 017b 6D01     		.2byte	0x16d
 1578 017d 00000000 		.4byte	.LFB5
 1579 0181 18000000 		.4byte	.LFE5-.LFB5
 1580 0185 01       		.uleb128 0x1
 1581 0186 9C       		.byte	0x9c
 1582 0187 0D       		.uleb128 0xd
 1583 0188 5D000000 		.4byte	.LASF28
 1584 018c 01       		.byte	0x1
 1585 018d 8701     		.2byte	0x187
 1586 018f 00000000 		.4byte	.LFB6
 1587 0193 14000000 		.4byte	.LFE6-.LFB6
 1588 0197 01       		.uleb128 0x1
 1589 0198 9C       		.byte	0x9c
 1590 0199 0D       		.uleb128 0xd
 1591 019a 66010000 		.4byte	.LASF29
 1592 019e 01       		.byte	0x1
 1593 019f A001     		.2byte	0x1a0
 1594 01a1 00000000 		.4byte	.LFB7
 1595 01a5 08000000 		.4byte	.LFE7-.LFB7
 1596 01a9 01       		.uleb128 0x1
 1597 01aa 9C       		.byte	0x9c
 1598 01ab 0E       		.uleb128 0xe
 1599 01ac C2010000 		.4byte	.LASF31
 1600 01b0 01       		.byte	0x1
 1601 01b1 C201     		.2byte	0x1c2
 1602 01b3 83000000 		.4byte	0x83
 1603 01b7 00000000 		.4byte	.LFB8
 1604 01bb 7C000000 		.4byte	.LFE8-.LFB8
 1605 01bf 01       		.uleb128 0x1
 1606 01c0 9C       		.byte	0x9c
 1607 01c1 E4010000 		.4byte	0x1e4
 1608 01c5 0F       		.uleb128 0xf
 1609 01c6 F5000000 		.4byte	.LASF33
 1610 01ca 01       		.byte	0x1
 1611 01cb C201     		.2byte	0x1c2
 1612 01cd 83000000 		.4byte	0x83
 1613 01d1 02       		.uleb128 0x2
 1614 01d2 91       		.byte	0x91
 1615 01d3 6C       		.sleb128 -20
 1616 01d4 10       		.uleb128 0x10
 1617 01d5 88000000 		.4byte	.LASF30
 1618 01d9 01       		.byte	0x1
 1619 01da C401     		.2byte	0x1c4
 1620 01dc 83000000 		.4byte	0x83
 1621 01e0 02       		.uleb128 0x2
 1622 01e1 91       		.byte	0x91
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 45


 1623 01e2 74       		.sleb128 -12
 1624 01e3 00       		.byte	0
 1625 01e4 11       		.uleb128 0x11
 1626 01e5 A6030000 		.4byte	.LASF32
 1627 01e9 01       		.byte	0x1
 1628 01ea F801     		.2byte	0x1f8
 1629 01ec 8F000000 		.4byte	0x8f
 1630 01f0 00000000 		.4byte	.LFB9
 1631 01f4 50000000 		.4byte	.LFE9-.LFB9
 1632 01f8 01       		.uleb128 0x1
 1633 01f9 9C       		.byte	0x9c
 1634 01fa 1D020000 		.4byte	0x21d
 1635 01fe 0F       		.uleb128 0xf
 1636 01ff C4020000 		.4byte	.LASF34
 1637 0203 01       		.byte	0x1
 1638 0204 F801     		.2byte	0x1f8
 1639 0206 83000000 		.4byte	0x83
 1640 020a 02       		.uleb128 0x2
 1641 020b 91       		.byte	0x91
 1642 020c 6C       		.sleb128 -20
 1643 020d 10       		.uleb128 0x10
 1644 020e 9F030000 		.4byte	.LASF35
 1645 0212 01       		.byte	0x1
 1646 0213 FA01     		.2byte	0x1fa
 1647 0215 83000000 		.4byte	0x83
 1648 0219 02       		.uleb128 0x2
 1649 021a 91       		.byte	0x91
 1650 021b 74       		.sleb128 -12
 1651 021c 00       		.byte	0
 1652 021d 12       		.uleb128 0x12
 1653 021e DC010000 		.4byte	.LASF37
 1654 0222 01       		.byte	0x1
 1655 0223 2502     		.2byte	0x225
 1656 0225 00000000 		.4byte	.LFB10
 1657 0229 1C000000 		.4byte	.LFE10-.LFB10
 1658 022d 01       		.uleb128 0x1
 1659 022e 9C       		.byte	0x9c
 1660 022f 43020000 		.4byte	0x243
 1661 0233 0F       		.uleb128 0xf
 1662 0234 E4000000 		.4byte	.LASF38
 1663 0238 01       		.byte	0x1
 1664 0239 2502     		.2byte	0x225
 1665 023b 83000000 		.4byte	0x83
 1666 023f 02       		.uleb128 0x2
 1667 0240 91       		.byte	0x91
 1668 0241 74       		.sleb128 -12
 1669 0242 00       		.byte	0
 1670 0243 0D       		.uleb128 0xd
 1671 0244 AE010000 		.4byte	.LASF39
 1672 0248 01       		.byte	0x1
 1673 0249 3B02     		.2byte	0x23b
 1674 024b 00000000 		.4byte	.LFB11
 1675 024f 1C000000 		.4byte	.LFE11-.LFB11
 1676 0253 01       		.uleb128 0x1
 1677 0254 9C       		.byte	0x9c
 1678 0255 12       		.uleb128 0x12
 1679 0256 1C020000 		.4byte	.LASF40
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 46


 1680 025a 01       		.byte	0x1
 1681 025b 5102     		.2byte	0x251
 1682 025d 00000000 		.4byte	.LFB12
 1683 0261 30000000 		.4byte	.LFE12-.LFB12
 1684 0265 01       		.uleb128 0x1
 1685 0266 9C       		.byte	0x9c
 1686 0267 7B020000 		.4byte	0x27b
 1687 026b 0F       		.uleb128 0xf
 1688 026c 94010000 		.4byte	.LASF41
 1689 0270 01       		.byte	0x1
 1690 0271 5102     		.2byte	0x251
 1691 0273 83000000 		.4byte	0x83
 1692 0277 02       		.uleb128 0x2
 1693 0278 91       		.byte	0x91
 1694 0279 74       		.sleb128 -12
 1695 027a 00       		.byte	0
 1696 027b 12       		.uleb128 0x12
 1697 027c 9D010000 		.4byte	.LASF42
 1698 0280 01       		.byte	0x1
 1699 0281 6602     		.2byte	0x266
 1700 0283 00000000 		.4byte	.LFB13
 1701 0287 2C000000 		.4byte	.LFE13-.LFB13
 1702 028b 01       		.uleb128 0x1
 1703 028c 9C       		.byte	0x9c
 1704 028d A1020000 		.4byte	0x2a1
 1705 0291 0F       		.uleb128 0xf
 1706 0292 FE010000 		.4byte	.LASF43
 1707 0296 01       		.byte	0x1
 1708 0297 6602     		.2byte	0x266
 1709 0299 83000000 		.4byte	0x83
 1710 029d 02       		.uleb128 0x2
 1711 029e 91       		.byte	0x91
 1712 029f 74       		.sleb128 -12
 1713 02a0 00       		.byte	0
 1714 02a1 12       		.uleb128 0x12
 1715 02a2 FD000000 		.4byte	.LASF44
 1716 02a6 01       		.byte	0x1
 1717 02a7 7E02     		.2byte	0x27e
 1718 02a9 00000000 		.4byte	.LFB14
 1719 02ad 1C000000 		.4byte	.LFE14-.LFB14
 1720 02b1 01       		.uleb128 0x1
 1721 02b2 9C       		.byte	0x9c
 1722 02b3 C7020000 		.4byte	0x2c7
 1723 02b7 0F       		.uleb128 0xf
 1724 02b8 E4000000 		.4byte	.LASF38
 1725 02bc 01       		.byte	0x1
 1726 02bd 7E02     		.2byte	0x27e
 1727 02bf 83000000 		.4byte	0x83
 1728 02c3 02       		.uleb128 0x2
 1729 02c4 91       		.byte	0x91
 1730 02c5 74       		.sleb128 -12
 1731 02c6 00       		.byte	0
 1732 02c7 12       		.uleb128 0x12
 1733 02c8 34010000 		.4byte	.LASF45
 1734 02cc 01       		.byte	0x1
 1735 02cd 9502     		.2byte	0x295
 1736 02cf 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 47


 1737 02d3 1C000000 		.4byte	.LFE15-.LFB15
 1738 02d7 01       		.uleb128 0x1
 1739 02d8 9C       		.byte	0x9c
 1740 02d9 ED020000 		.4byte	0x2ed
 1741 02dd 0F       		.uleb128 0xf
 1742 02de E4000000 		.4byte	.LASF38
 1743 02e2 01       		.byte	0x1
 1744 02e3 9502     		.2byte	0x295
 1745 02e5 83000000 		.4byte	0x83
 1746 02e9 02       		.uleb128 0x2
 1747 02ea 91       		.byte	0x91
 1748 02eb 74       		.sleb128 -12
 1749 02ec 00       		.byte	0
 1750 02ed 13       		.uleb128 0x13
 1751 02ee 03030000 		.4byte	.LASF46
 1752 02f2 01       		.byte	0x1
 1753 02f3 B102     		.2byte	0x2b1
 1754 02f5 00000000 		.4byte	.LFB16
 1755 02f9 30000000 		.4byte	.LFE16-.LFB16
 1756 02fd 01       		.uleb128 0x1
 1757 02fe 9C       		.byte	0x9c
 1758 02ff 22030000 		.4byte	0x322
 1759 0303 0F       		.uleb128 0xf
 1760 0304 C4020000 		.4byte	.LASF34
 1761 0308 01       		.byte	0x1
 1762 0309 B102     		.2byte	0x2b1
 1763 030b 83000000 		.4byte	0x83
 1764 030f 02       		.uleb128 0x2
 1765 0310 91       		.byte	0x91
 1766 0311 74       		.sleb128 -12
 1767 0312 0F       		.uleb128 0xf
 1768 0313 E1020000 		.4byte	.LASF47
 1769 0317 01       		.byte	0x1
 1770 0318 B102     		.2byte	0x2b1
 1771 031a 8F000000 		.4byte	0x8f
 1772 031e 02       		.uleb128 0x2
 1773 031f 91       		.byte	0x91
 1774 0320 72       		.sleb128 -14
 1775 0321 00       		.byte	0
 1776 0322 13       		.uleb128 0x13
 1777 0323 EC010000 		.4byte	.LASF48
 1778 0327 01       		.byte	0x1
 1779 0328 D302     		.2byte	0x2d3
 1780 032a 00000000 		.4byte	.LFB17
 1781 032e 2C000000 		.4byte	.LFE17-.LFB17
 1782 0332 01       		.uleb128 0x1
 1783 0333 9C       		.byte	0x9c
 1784 0334 57030000 		.4byte	0x357
 1785 0338 0F       		.uleb128 0xf
 1786 0339 C4020000 		.4byte	.LASF34
 1787 033d 01       		.byte	0x1
 1788 033e D302     		.2byte	0x2d3
 1789 0340 83000000 		.4byte	0x83
 1790 0344 02       		.uleb128 0x2
 1791 0345 91       		.byte	0x91
 1792 0346 74       		.sleb128 -12
 1793 0347 0F       		.uleb128 0xf
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 48


 1794 0348 07000000 		.4byte	.LASF49
 1795 034c 01       		.byte	0x1
 1796 034d D302     		.2byte	0x2d3
 1797 034f 9B000000 		.4byte	0x9b
 1798 0353 02       		.uleb128 0x2
 1799 0354 91       		.byte	0x91
 1800 0355 70       		.sleb128 -16
 1801 0356 00       		.byte	0
 1802 0357 11       		.uleb128 0x11
 1803 0358 08020000 		.4byte	.LASF50
 1804 035c 01       		.byte	0x1
 1805 035d F402     		.2byte	0x2f4
 1806 035f 8F000000 		.4byte	0x8f
 1807 0363 00000000 		.4byte	.LFB18
 1808 0367 A4000000 		.4byte	.LFE18-.LFB18
 1809 036b 01       		.uleb128 0x1
 1810 036c 9C       		.byte	0x9c
 1811 036d 9F030000 		.4byte	0x39f
 1812 0371 0F       		.uleb128 0xf
 1813 0372 C4020000 		.4byte	.LASF34
 1814 0376 01       		.byte	0x1
 1815 0377 F402     		.2byte	0x2f4
 1816 0379 83000000 		.4byte	0x83
 1817 037d 02       		.uleb128 0x2
 1818 037e 91       		.byte	0x91
 1819 037f 6C       		.sleb128 -20
 1820 0380 0F       		.uleb128 0xf
 1821 0381 E8020000 		.4byte	.LASF51
 1822 0385 01       		.byte	0x1
 1823 0386 F402     		.2byte	0x2f4
 1824 0388 8F000000 		.4byte	0x8f
 1825 038c 02       		.uleb128 0x2
 1826 038d 91       		.byte	0x91
 1827 038e 6A       		.sleb128 -22
 1828 038f 10       		.uleb128 0x10
 1829 0390 76010000 		.4byte	.LASF52
 1830 0394 01       		.byte	0x1
 1831 0395 F602     		.2byte	0x2f6
 1832 0397 8F000000 		.4byte	0x8f
 1833 039b 02       		.uleb128 0x2
 1834 039c 91       		.byte	0x91
 1835 039d 76       		.sleb128 -10
 1836 039e 00       		.byte	0
 1837 039f 11       		.uleb128 0x11
 1838 03a0 A8000000 		.4byte	.LASF53
 1839 03a4 01       		.byte	0x1
 1840 03a5 2A03     		.2byte	0x32a
 1841 03a7 9B000000 		.4byte	0x9b
 1842 03ab 00000000 		.4byte	.LFB19
 1843 03af 90000000 		.4byte	.LFE19-.LFB19
 1844 03b3 01       		.uleb128 0x1
 1845 03b4 9C       		.byte	0x9c
 1846 03b5 E7030000 		.4byte	0x3e7
 1847 03b9 0F       		.uleb128 0xf
 1848 03ba C4020000 		.4byte	.LASF34
 1849 03be 01       		.byte	0x1
 1850 03bf 2A03     		.2byte	0x32a
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 49


 1851 03c1 83000000 		.4byte	0x83
 1852 03c5 02       		.uleb128 0x2
 1853 03c6 91       		.byte	0x91
 1854 03c7 64       		.sleb128 -28
 1855 03c8 0F       		.uleb128 0xf
 1856 03c9 E8020000 		.4byte	.LASF51
 1857 03cd 01       		.byte	0x1
 1858 03ce 2A03     		.2byte	0x32a
 1859 03d0 8F000000 		.4byte	0x8f
 1860 03d4 02       		.uleb128 0x2
 1861 03d5 91       		.byte	0x91
 1862 03d6 62       		.sleb128 -30
 1863 03d7 10       		.uleb128 0x10
 1864 03d8 1B010000 		.4byte	.LASF54
 1865 03dc 01       		.byte	0x1
 1866 03dd 2C03     		.2byte	0x32c
 1867 03df C1000000 		.4byte	0xc1
 1868 03e3 02       		.uleb128 0x2
 1869 03e4 91       		.byte	0x91
 1870 03e5 68       		.sleb128 -24
 1871 03e6 00       		.byte	0
 1872 03e7 11       		.uleb128 0x11
 1873 03e8 16000000 		.4byte	.LASF55
 1874 03ec 01       		.byte	0x1
 1875 03ed 5703     		.2byte	0x357
 1876 03ef A7000000 		.4byte	0xa7
 1877 03f3 00000000 		.4byte	.LFB20
 1878 03f7 80000000 		.4byte	.LFE20-.LFB20
 1879 03fb 01       		.uleb128 0x1
 1880 03fc 9C       		.byte	0x9c
 1881 03fd 2F040000 		.4byte	0x42f
 1882 0401 0F       		.uleb128 0xf
 1883 0402 C4020000 		.4byte	.LASF34
 1884 0406 01       		.byte	0x1
 1885 0407 5703     		.2byte	0x357
 1886 0409 83000000 		.4byte	0x83
 1887 040d 02       		.uleb128 0x2
 1888 040e 91       		.byte	0x91
 1889 040f 64       		.sleb128 -28
 1890 0410 0F       		.uleb128 0xf
 1891 0411 E8020000 		.4byte	.LASF51
 1892 0415 01       		.byte	0x1
 1893 0416 5703     		.2byte	0x357
 1894 0418 8F000000 		.4byte	0x8f
 1895 041c 02       		.uleb128 0x2
 1896 041d 91       		.byte	0x91
 1897 041e 62       		.sleb128 -30
 1898 041f 10       		.uleb128 0x10
 1899 0420 43010000 		.4byte	.LASF56
 1900 0424 01       		.byte	0x1
 1901 0425 5903     		.2byte	0x359
 1902 0427 A7000000 		.4byte	0xa7
 1903 042b 02       		.uleb128 0x2
 1904 042c 91       		.byte	0x91
 1905 042d 6C       		.sleb128 -20
 1906 042e 00       		.byte	0
 1907 042f 09       		.uleb128 0x9
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 50


 1908 0430 83000000 		.4byte	0x83
 1909 0434 3F040000 		.4byte	0x43f
 1910 0438 0A       		.uleb128 0xa
 1911 0439 E5000000 		.4byte	0xe5
 1912 043d 01       		.byte	0x1
 1913 043e 00       		.byte	0
 1914 043f 08       		.uleb128 0x8
 1915 0440 CE020000 		.4byte	.LASF57
 1916 0444 01       		.byte	0x1
 1917 0445 21       		.byte	0x21
 1918 0446 50040000 		.4byte	0x450
 1919 044a 05       		.uleb128 0x5
 1920 044b 03       		.byte	0x3
 1921 044c 00000000 		.4byte	ADC_channelsConfig
 1922 0450 0B       		.uleb128 0xb
 1923 0451 2F040000 		.4byte	0x42f
 1924 0455 14       		.uleb128 0x14
 1925 0456 E9000000 		.4byte	.LASF58
 1926 045a 01       		.byte	0x1
 1927 045b 18       		.byte	0x18
 1928 045c 6B000000 		.4byte	0x6b
 1929 0460 05       		.uleb128 0x5
 1930 0461 03       		.byte	0x3
 1931 0462 00000000 		.4byte	ADC_initVar
 1932 0466 09       		.uleb128 0x9
 1933 0467 8F000000 		.4byte	0x8f
 1934 046b 76040000 		.4byte	0x476
 1935 046f 0A       		.uleb128 0xa
 1936 0470 E5000000 		.4byte	0xe5
 1937 0474 01       		.byte	0x1
 1938 0475 00       		.byte	0
 1939 0476 14       		.uleb128 0x14
 1940 0477 59020000 		.4byte	.LASF59
 1941 047b 01       		.byte	0x1
 1942 047c 19       		.byte	0x19
 1943 047d 87040000 		.4byte	0x487
 1944 0481 05       		.uleb128 0x5
 1945 0482 03       		.byte	0x3
 1946 0483 00000000 		.4byte	ADC_offset
 1947 0487 05       		.uleb128 0x5
 1948 0488 66040000 		.4byte	0x466
 1949 048c 09       		.uleb128 0x9
 1950 048d 9B000000 		.4byte	0x9b
 1951 0491 9C040000 		.4byte	0x49c
 1952 0495 0A       		.uleb128 0xa
 1953 0496 E5000000 		.4byte	0xe5
 1954 049a 01       		.byte	0x1
 1955 049b 00       		.byte	0
 1956 049c 14       		.uleb128 0x14
 1957 049d BC000000 		.4byte	.LASF60
 1958 04a1 01       		.byte	0x1
 1959 04a2 1A       		.byte	0x1a
 1960 04a3 AD040000 		.4byte	0x4ad
 1961 04a7 05       		.uleb128 0x5
 1962 04a8 03       		.byte	0x3
 1963 04a9 00000000 		.4byte	ADC_countsPer10Volt
 1964 04ad 05       		.uleb128 0x5
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 51


 1965 04ae 8C040000 		.4byte	0x48c
 1966 04b2 00       		.byte	0
 1967              		.section	.debug_abbrev,"",%progbits
 1968              	.Ldebug_abbrev0:
 1969 0000 01       		.uleb128 0x1
 1970 0001 11       		.uleb128 0x11
 1971 0002 01       		.byte	0x1
 1972 0003 25       		.uleb128 0x25
 1973 0004 0E       		.uleb128 0xe
 1974 0005 13       		.uleb128 0x13
 1975 0006 0B       		.uleb128 0xb
 1976 0007 03       		.uleb128 0x3
 1977 0008 0E       		.uleb128 0xe
 1978 0009 1B       		.uleb128 0x1b
 1979 000a 0E       		.uleb128 0xe
 1980 000b 55       		.uleb128 0x55
 1981 000c 17       		.uleb128 0x17
 1982 000d 11       		.uleb128 0x11
 1983 000e 01       		.uleb128 0x1
 1984 000f 10       		.uleb128 0x10
 1985 0010 17       		.uleb128 0x17
 1986 0011 00       		.byte	0
 1987 0012 00       		.byte	0
 1988 0013 02       		.uleb128 0x2
 1989 0014 24       		.uleb128 0x24
 1990 0015 00       		.byte	0
 1991 0016 0B       		.uleb128 0xb
 1992 0017 0B       		.uleb128 0xb
 1993 0018 3E       		.uleb128 0x3e
 1994 0019 0B       		.uleb128 0xb
 1995 001a 03       		.uleb128 0x3
 1996 001b 0E       		.uleb128 0xe
 1997 001c 00       		.byte	0
 1998 001d 00       		.byte	0
 1999 001e 03       		.uleb128 0x3
 2000 001f 24       		.uleb128 0x24
 2001 0020 00       		.byte	0
 2002 0021 0B       		.uleb128 0xb
 2003 0022 0B       		.uleb128 0xb
 2004 0023 3E       		.uleb128 0x3e
 2005 0024 0B       		.uleb128 0xb
 2006 0025 03       		.uleb128 0x3
 2007 0026 08       		.uleb128 0x8
 2008 0027 00       		.byte	0
 2009 0028 00       		.byte	0
 2010 0029 04       		.uleb128 0x4
 2011 002a 16       		.uleb128 0x16
 2012 002b 00       		.byte	0
 2013 002c 03       		.uleb128 0x3
 2014 002d 0E       		.uleb128 0xe
 2015 002e 3A       		.uleb128 0x3a
 2016 002f 0B       		.uleb128 0xb
 2017 0030 3B       		.uleb128 0x3b
 2018 0031 05       		.uleb128 0x5
 2019 0032 49       		.uleb128 0x49
 2020 0033 13       		.uleb128 0x13
 2021 0034 00       		.byte	0
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 52


 2022 0035 00       		.byte	0
 2023 0036 05       		.uleb128 0x5
 2024 0037 35       		.uleb128 0x35
 2025 0038 00       		.byte	0
 2026 0039 49       		.uleb128 0x49
 2027 003a 13       		.uleb128 0x13
 2028 003b 00       		.byte	0
 2029 003c 00       		.byte	0
 2030 003d 06       		.uleb128 0x6
 2031 003e 2E       		.uleb128 0x2e
 2032 003f 00       		.byte	0
 2033 0040 3F       		.uleb128 0x3f
 2034 0041 19       		.uleb128 0x19
 2035 0042 03       		.uleb128 0x3
 2036 0043 0E       		.uleb128 0xe
 2037 0044 3A       		.uleb128 0x3a
 2038 0045 0B       		.uleb128 0xb
 2039 0046 3B       		.uleb128 0x3b
 2040 0047 0B       		.uleb128 0xb
 2041 0048 27       		.uleb128 0x27
 2042 0049 19       		.uleb128 0x19
 2043 004a 11       		.uleb128 0x11
 2044 004b 01       		.uleb128 0x1
 2045 004c 12       		.uleb128 0x12
 2046 004d 06       		.uleb128 0x6
 2047 004e 40       		.uleb128 0x40
 2048 004f 18       		.uleb128 0x18
 2049 0050 9642     		.uleb128 0x2116
 2050 0052 19       		.uleb128 0x19
 2051 0053 00       		.byte	0
 2052 0054 00       		.byte	0
 2053 0055 07       		.uleb128 0x7
 2054 0056 2E       		.uleb128 0x2e
 2055 0057 01       		.byte	0x1
 2056 0058 3F       		.uleb128 0x3f
 2057 0059 19       		.uleb128 0x19
 2058 005a 03       		.uleb128 0x3
 2059 005b 0E       		.uleb128 0xe
 2060 005c 3A       		.uleb128 0x3a
 2061 005d 0B       		.uleb128 0xb
 2062 005e 3B       		.uleb128 0x3b
 2063 005f 0B       		.uleb128 0xb
 2064 0060 27       		.uleb128 0x27
 2065 0061 19       		.uleb128 0x19
 2066 0062 11       		.uleb128 0x11
 2067 0063 01       		.uleb128 0x1
 2068 0064 12       		.uleb128 0x12
 2069 0065 06       		.uleb128 0x6
 2070 0066 40       		.uleb128 0x40
 2071 0067 18       		.uleb128 0x18
 2072 0068 9642     		.uleb128 0x2116
 2073 006a 19       		.uleb128 0x19
 2074 006b 01       		.uleb128 0x1
 2075 006c 13       		.uleb128 0x13
 2076 006d 00       		.byte	0
 2077 006e 00       		.byte	0
 2078 006f 08       		.uleb128 0x8
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 53


 2079 0070 34       		.uleb128 0x34
 2080 0071 00       		.byte	0
 2081 0072 03       		.uleb128 0x3
 2082 0073 0E       		.uleb128 0xe
 2083 0074 3A       		.uleb128 0x3a
 2084 0075 0B       		.uleb128 0xb
 2085 0076 3B       		.uleb128 0x3b
 2086 0077 0B       		.uleb128 0xb
 2087 0078 49       		.uleb128 0x49
 2088 0079 13       		.uleb128 0x13
 2089 007a 02       		.uleb128 0x2
 2090 007b 18       		.uleb128 0x18
 2091 007c 00       		.byte	0
 2092 007d 00       		.byte	0
 2093 007e 09       		.uleb128 0x9
 2094 007f 01       		.uleb128 0x1
 2095 0080 01       		.byte	0x1
 2096 0081 49       		.uleb128 0x49
 2097 0082 13       		.uleb128 0x13
 2098 0083 01       		.uleb128 0x1
 2099 0084 13       		.uleb128 0x13
 2100 0085 00       		.byte	0
 2101 0086 00       		.byte	0
 2102 0087 0A       		.uleb128 0xa
 2103 0088 21       		.uleb128 0x21
 2104 0089 00       		.byte	0
 2105 008a 49       		.uleb128 0x49
 2106 008b 13       		.uleb128 0x13
 2107 008c 2F       		.uleb128 0x2f
 2108 008d 0B       		.uleb128 0xb
 2109 008e 00       		.byte	0
 2110 008f 00       		.byte	0
 2111 0090 0B       		.uleb128 0xb
 2112 0091 26       		.uleb128 0x26
 2113 0092 00       		.byte	0
 2114 0093 49       		.uleb128 0x49
 2115 0094 13       		.uleb128 0x13
 2116 0095 00       		.byte	0
 2117 0096 00       		.byte	0
 2118 0097 0C       		.uleb128 0xc
 2119 0098 2E       		.uleb128 0x2e
 2120 0099 00       		.byte	0
 2121 009a 3F       		.uleb128 0x3f
 2122 009b 19       		.uleb128 0x19
 2123 009c 03       		.uleb128 0x3
 2124 009d 0E       		.uleb128 0xe
 2125 009e 3A       		.uleb128 0x3a
 2126 009f 0B       		.uleb128 0xb
 2127 00a0 3B       		.uleb128 0x3b
 2128 00a1 05       		.uleb128 0x5
 2129 00a2 27       		.uleb128 0x27
 2130 00a3 19       		.uleb128 0x19
 2131 00a4 11       		.uleb128 0x11
 2132 00a5 01       		.uleb128 0x1
 2133 00a6 12       		.uleb128 0x12
 2134 00a7 06       		.uleb128 0x6
 2135 00a8 40       		.uleb128 0x40
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 54


 2136 00a9 18       		.uleb128 0x18
 2137 00aa 9642     		.uleb128 0x2116
 2138 00ac 19       		.uleb128 0x19
 2139 00ad 00       		.byte	0
 2140 00ae 00       		.byte	0
 2141 00af 0D       		.uleb128 0xd
 2142 00b0 2E       		.uleb128 0x2e
 2143 00b1 00       		.byte	0
 2144 00b2 3F       		.uleb128 0x3f
 2145 00b3 19       		.uleb128 0x19
 2146 00b4 03       		.uleb128 0x3
 2147 00b5 0E       		.uleb128 0xe
 2148 00b6 3A       		.uleb128 0x3a
 2149 00b7 0B       		.uleb128 0xb
 2150 00b8 3B       		.uleb128 0x3b
 2151 00b9 05       		.uleb128 0x5
 2152 00ba 27       		.uleb128 0x27
 2153 00bb 19       		.uleb128 0x19
 2154 00bc 11       		.uleb128 0x11
 2155 00bd 01       		.uleb128 0x1
 2156 00be 12       		.uleb128 0x12
 2157 00bf 06       		.uleb128 0x6
 2158 00c0 40       		.uleb128 0x40
 2159 00c1 18       		.uleb128 0x18
 2160 00c2 9742     		.uleb128 0x2117
 2161 00c4 19       		.uleb128 0x19
 2162 00c5 00       		.byte	0
 2163 00c6 00       		.byte	0
 2164 00c7 0E       		.uleb128 0xe
 2165 00c8 2E       		.uleb128 0x2e
 2166 00c9 01       		.byte	0x1
 2167 00ca 3F       		.uleb128 0x3f
 2168 00cb 19       		.uleb128 0x19
 2169 00cc 03       		.uleb128 0x3
 2170 00cd 0E       		.uleb128 0xe
 2171 00ce 3A       		.uleb128 0x3a
 2172 00cf 0B       		.uleb128 0xb
 2173 00d0 3B       		.uleb128 0x3b
 2174 00d1 05       		.uleb128 0x5
 2175 00d2 27       		.uleb128 0x27
 2176 00d3 19       		.uleb128 0x19
 2177 00d4 49       		.uleb128 0x49
 2178 00d5 13       		.uleb128 0x13
 2179 00d6 11       		.uleb128 0x11
 2180 00d7 01       		.uleb128 0x1
 2181 00d8 12       		.uleb128 0x12
 2182 00d9 06       		.uleb128 0x6
 2183 00da 40       		.uleb128 0x40
 2184 00db 18       		.uleb128 0x18
 2185 00dc 9742     		.uleb128 0x2117
 2186 00de 19       		.uleb128 0x19
 2187 00df 01       		.uleb128 0x1
 2188 00e0 13       		.uleb128 0x13
 2189 00e1 00       		.byte	0
 2190 00e2 00       		.byte	0
 2191 00e3 0F       		.uleb128 0xf
 2192 00e4 05       		.uleb128 0x5
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 55


 2193 00e5 00       		.byte	0
 2194 00e6 03       		.uleb128 0x3
 2195 00e7 0E       		.uleb128 0xe
 2196 00e8 3A       		.uleb128 0x3a
 2197 00e9 0B       		.uleb128 0xb
 2198 00ea 3B       		.uleb128 0x3b
 2199 00eb 05       		.uleb128 0x5
 2200 00ec 49       		.uleb128 0x49
 2201 00ed 13       		.uleb128 0x13
 2202 00ee 02       		.uleb128 0x2
 2203 00ef 18       		.uleb128 0x18
 2204 00f0 00       		.byte	0
 2205 00f1 00       		.byte	0
 2206 00f2 10       		.uleb128 0x10
 2207 00f3 34       		.uleb128 0x34
 2208 00f4 00       		.byte	0
 2209 00f5 03       		.uleb128 0x3
 2210 00f6 0E       		.uleb128 0xe
 2211 00f7 3A       		.uleb128 0x3a
 2212 00f8 0B       		.uleb128 0xb
 2213 00f9 3B       		.uleb128 0x3b
 2214 00fa 05       		.uleb128 0x5
 2215 00fb 49       		.uleb128 0x49
 2216 00fc 13       		.uleb128 0x13
 2217 00fd 02       		.uleb128 0x2
 2218 00fe 18       		.uleb128 0x18
 2219 00ff 00       		.byte	0
 2220 0100 00       		.byte	0
 2221 0101 11       		.uleb128 0x11
 2222 0102 2E       		.uleb128 0x2e
 2223 0103 01       		.byte	0x1
 2224 0104 3F       		.uleb128 0x3f
 2225 0105 19       		.uleb128 0x19
 2226 0106 03       		.uleb128 0x3
 2227 0107 0E       		.uleb128 0xe
 2228 0108 3A       		.uleb128 0x3a
 2229 0109 0B       		.uleb128 0xb
 2230 010a 3B       		.uleb128 0x3b
 2231 010b 05       		.uleb128 0x5
 2232 010c 27       		.uleb128 0x27
 2233 010d 19       		.uleb128 0x19
 2234 010e 49       		.uleb128 0x49
 2235 010f 13       		.uleb128 0x13
 2236 0110 11       		.uleb128 0x11
 2237 0111 01       		.uleb128 0x1
 2238 0112 12       		.uleb128 0x12
 2239 0113 06       		.uleb128 0x6
 2240 0114 40       		.uleb128 0x40
 2241 0115 18       		.uleb128 0x18
 2242 0116 9642     		.uleb128 0x2116
 2243 0118 19       		.uleb128 0x19
 2244 0119 01       		.uleb128 0x1
 2245 011a 13       		.uleb128 0x13
 2246 011b 00       		.byte	0
 2247 011c 00       		.byte	0
 2248 011d 12       		.uleb128 0x12
 2249 011e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 56


 2250 011f 01       		.byte	0x1
 2251 0120 3F       		.uleb128 0x3f
 2252 0121 19       		.uleb128 0x19
 2253 0122 03       		.uleb128 0x3
 2254 0123 0E       		.uleb128 0xe
 2255 0124 3A       		.uleb128 0x3a
 2256 0125 0B       		.uleb128 0xb
 2257 0126 3B       		.uleb128 0x3b
 2258 0127 05       		.uleb128 0x5
 2259 0128 27       		.uleb128 0x27
 2260 0129 19       		.uleb128 0x19
 2261 012a 11       		.uleb128 0x11
 2262 012b 01       		.uleb128 0x1
 2263 012c 12       		.uleb128 0x12
 2264 012d 06       		.uleb128 0x6
 2265 012e 40       		.uleb128 0x40
 2266 012f 18       		.uleb128 0x18
 2267 0130 9742     		.uleb128 0x2117
 2268 0132 19       		.uleb128 0x19
 2269 0133 01       		.uleb128 0x1
 2270 0134 13       		.uleb128 0x13
 2271 0135 00       		.byte	0
 2272 0136 00       		.byte	0
 2273 0137 13       		.uleb128 0x13
 2274 0138 2E       		.uleb128 0x2e
 2275 0139 01       		.byte	0x1
 2276 013a 3F       		.uleb128 0x3f
 2277 013b 19       		.uleb128 0x19
 2278 013c 03       		.uleb128 0x3
 2279 013d 0E       		.uleb128 0xe
 2280 013e 3A       		.uleb128 0x3a
 2281 013f 0B       		.uleb128 0xb
 2282 0140 3B       		.uleb128 0x3b
 2283 0141 05       		.uleb128 0x5
 2284 0142 27       		.uleb128 0x27
 2285 0143 19       		.uleb128 0x19
 2286 0144 11       		.uleb128 0x11
 2287 0145 01       		.uleb128 0x1
 2288 0146 12       		.uleb128 0x12
 2289 0147 06       		.uleb128 0x6
 2290 0148 40       		.uleb128 0x40
 2291 0149 18       		.uleb128 0x18
 2292 014a 9642     		.uleb128 0x2116
 2293 014c 19       		.uleb128 0x19
 2294 014d 01       		.uleb128 0x1
 2295 014e 13       		.uleb128 0x13
 2296 014f 00       		.byte	0
 2297 0150 00       		.byte	0
 2298 0151 14       		.uleb128 0x14
 2299 0152 34       		.uleb128 0x34
 2300 0153 00       		.byte	0
 2301 0154 03       		.uleb128 0x3
 2302 0155 0E       		.uleb128 0xe
 2303 0156 3A       		.uleb128 0x3a
 2304 0157 0B       		.uleb128 0xb
 2305 0158 3B       		.uleb128 0x3b
 2306 0159 0B       		.uleb128 0xb
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 57


 2307 015a 49       		.uleb128 0x49
 2308 015b 13       		.uleb128 0x13
 2309 015c 3F       		.uleb128 0x3f
 2310 015d 19       		.uleb128 0x19
 2311 015e 02       		.uleb128 0x2
 2312 015f 18       		.uleb128 0x18
 2313 0160 00       		.byte	0
 2314 0161 00       		.byte	0
 2315 0162 00       		.byte	0
 2316              		.section	.debug_aranges,"",%progbits
 2317 0000 AC000000 		.4byte	0xac
 2318 0004 0200     		.2byte	0x2
 2319 0006 00000000 		.4byte	.Ldebug_info0
 2320 000a 04       		.byte	0x4
 2321 000b 00       		.byte	0
 2322 000c 0000     		.2byte	0
 2323 000e 0000     		.2byte	0
 2324 0010 00000000 		.4byte	.LFB2
 2325 0014 24000000 		.4byte	.LFE2-.LFB2
 2326 0018 00000000 		.4byte	.LFB3
 2327 001c 64020000 		.4byte	.LFE3-.LFB3
 2328 0020 00000000 		.4byte	.LFB4
 2329 0024 38000000 		.4byte	.LFE4-.LFB4
 2330 0028 00000000 		.4byte	.LFB5
 2331 002c 18000000 		.4byte	.LFE5-.LFB5
 2332 0030 00000000 		.4byte	.LFB6
 2333 0034 14000000 		.4byte	.LFE6-.LFB6
 2334 0038 00000000 		.4byte	.LFB7
 2335 003c 08000000 		.4byte	.LFE7-.LFB7
 2336 0040 00000000 		.4byte	.LFB8
 2337 0044 7C000000 		.4byte	.LFE8-.LFB8
 2338 0048 00000000 		.4byte	.LFB9
 2339 004c 50000000 		.4byte	.LFE9-.LFB9
 2340 0050 00000000 		.4byte	.LFB10
 2341 0054 1C000000 		.4byte	.LFE10-.LFB10
 2342 0058 00000000 		.4byte	.LFB11
 2343 005c 1C000000 		.4byte	.LFE11-.LFB11
 2344 0060 00000000 		.4byte	.LFB12
 2345 0064 30000000 		.4byte	.LFE12-.LFB12
 2346 0068 00000000 		.4byte	.LFB13
 2347 006c 2C000000 		.4byte	.LFE13-.LFB13
 2348 0070 00000000 		.4byte	.LFB14
 2349 0074 1C000000 		.4byte	.LFE14-.LFB14
 2350 0078 00000000 		.4byte	.LFB15
 2351 007c 1C000000 		.4byte	.LFE15-.LFB15
 2352 0080 00000000 		.4byte	.LFB16
 2353 0084 30000000 		.4byte	.LFE16-.LFB16
 2354 0088 00000000 		.4byte	.LFB17
 2355 008c 2C000000 		.4byte	.LFE17-.LFB17
 2356 0090 00000000 		.4byte	.LFB18
 2357 0094 A4000000 		.4byte	.LFE18-.LFB18
 2358 0098 00000000 		.4byte	.LFB19
 2359 009c 90000000 		.4byte	.LFE19-.LFB19
 2360 00a0 00000000 		.4byte	.LFB20
 2361 00a4 80000000 		.4byte	.LFE20-.LFB20
 2362 00a8 00000000 		.4byte	0
 2363 00ac 00000000 		.4byte	0
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 58


 2364              		.section	.debug_ranges,"",%progbits
 2365              	.Ldebug_ranges0:
 2366 0000 00000000 		.4byte	.LFB2
 2367 0004 24000000 		.4byte	.LFE2
 2368 0008 00000000 		.4byte	.LFB3
 2369 000c 64020000 		.4byte	.LFE3
 2370 0010 00000000 		.4byte	.LFB4
 2371 0014 38000000 		.4byte	.LFE4
 2372 0018 00000000 		.4byte	.LFB5
 2373 001c 18000000 		.4byte	.LFE5
 2374 0020 00000000 		.4byte	.LFB6
 2375 0024 14000000 		.4byte	.LFE6
 2376 0028 00000000 		.4byte	.LFB7
 2377 002c 08000000 		.4byte	.LFE7
 2378 0030 00000000 		.4byte	.LFB8
 2379 0034 7C000000 		.4byte	.LFE8
 2380 0038 00000000 		.4byte	.LFB9
 2381 003c 50000000 		.4byte	.LFE9
 2382 0040 00000000 		.4byte	.LFB10
 2383 0044 1C000000 		.4byte	.LFE10
 2384 0048 00000000 		.4byte	.LFB11
 2385 004c 1C000000 		.4byte	.LFE11
 2386 0050 00000000 		.4byte	.LFB12
 2387 0054 30000000 		.4byte	.LFE12
 2388 0058 00000000 		.4byte	.LFB13
 2389 005c 2C000000 		.4byte	.LFE13
 2390 0060 00000000 		.4byte	.LFB14
 2391 0064 1C000000 		.4byte	.LFE14
 2392 0068 00000000 		.4byte	.LFB15
 2393 006c 1C000000 		.4byte	.LFE15
 2394 0070 00000000 		.4byte	.LFB16
 2395 0074 30000000 		.4byte	.LFE16
 2396 0078 00000000 		.4byte	.LFB17
 2397 007c 2C000000 		.4byte	.LFE17
 2398 0080 00000000 		.4byte	.LFB18
 2399 0084 A4000000 		.4byte	.LFE18
 2400 0088 00000000 		.4byte	.LFB19
 2401 008c 90000000 		.4byte	.LFE19
 2402 0090 00000000 		.4byte	.LFB20
 2403 0094 80000000 		.4byte	.LFE20
 2404 0098 00000000 		.4byte	0
 2405 009c 00000000 		.4byte	0
 2406              		.section	.debug_line,"",%progbits
 2407              	.Ldebug_line0:
 2408 0000 C3020000 		.section	.debug_str,"MS",%progbits,1
 2408      02004200 
 2408      00000201 
 2408      FB0E0D00 
 2408      01010101 
 2409              	.LASF10:
 2410 0000 75696E74 		.ascii	"uint16\000"
 2410      313600
 2411              	.LASF49:
 2412 0007 61646347 		.ascii	"adcGain\000"
 2412      61696E00 
 2413              	.LASF23:
 2414 000f 636F756E 		.ascii	"counts\000"
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 59


 2414      747300
 2415              	.LASF55:
 2416 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2416      436F756E 
 2416      7473546F 
 2416      5F566F6C 
 2416      747300
 2417              	.LASF36:
 2418 0029 4144435F 		.ascii	"ADC_Init\000"
 2418      496E6974 
 2418      00
 2419              	.LASF7:
 2420 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2420      206C6F6E 
 2420      6720756E 
 2420      7369676E 
 2420      65642069 
 2421              	.LASF24:
 2422 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2422      496E7075 
 2422      7473506C 
 2422      6163656D 
 2422      656E7400 
 2423              	.LASF28:
 2424 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2424      53746172 
 2424      74436F6E 
 2424      76657274 
 2424      00
 2425              	.LASF6:
 2426 006e 6C6F6E67 		.ascii	"long long int\000"
 2426      206C6F6E 
 2426      6720696E 
 2426      7400
 2427              	.LASF0:
 2428 007c 7369676E 		.ascii	"signed char\000"
 2428      65642063 
 2428      68617200 
 2429              	.LASF30:
 2430 0088 73746174 		.ascii	"status\000"
 2430      757300
 2431              	.LASF13:
 2432 008f 696E7433 		.ascii	"int32\000"
 2432      3200
 2433              	.LASF25:
 2434 0095 4144435F 		.ascii	"ADC_Start\000"
 2434      53746172 
 2434      7400
 2435              	.LASF4:
 2436 009f 6C6F6E67 		.ascii	"long int\000"
 2436      20696E74 
 2436      00
 2437              	.LASF53:
 2438 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2438      436F756E 
 2438      7473546F 
 2438      5F75566F 
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 60


 2438      6C747300 
 2439              	.LASF60:
 2440 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2440      636F756E 
 2440      74735065 
 2440      72313056 
 2440      6F6C7400 
 2441              	.LASF9:
 2442 00d0 75696E74 		.ascii	"uint8\000"
 2442      3800
 2443              	.LASF16:
 2444 00d6 646F7562 		.ascii	"double\000"
 2444      6C6500
 2445              	.LASF11:
 2446 00dd 75696E74 		.ascii	"uint32\000"
 2446      333200
 2447              	.LASF38:
 2448 00e4 6D61736B 		.ascii	"mask\000"
 2448      00
 2449              	.LASF58:
 2450 00e9 4144435F 		.ascii	"ADC_initVar\000"
 2450      696E6974 
 2450      56617200 
 2451              	.LASF33:
 2452 00f5 7265744D 		.ascii	"retMode\000"
 2452      6F646500 
 2453              	.LASF44:
 2454 00fd 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2454      5365744C 
 2454      696D6974 
 2454      4D61736B 
 2454      00
 2455              	.LASF8:
 2456 010e 756E7369 		.ascii	"unsigned int\000"
 2456      676E6564 
 2456      20696E74 
 2456      00
 2457              	.LASF54:
 2458 011b 75566F6C 		.ascii	"uVolts\000"
 2458      747300
 2459              	.LASF5:
 2460 0122 6C6F6E67 		.ascii	"long unsigned int\000"
 2460      20756E73 
 2460      69676E65 
 2460      6420696E 
 2460      7400
 2461              	.LASF45:
 2462 0134 4144435F 		.ascii	"ADC_SetSatMask\000"
 2462      53657453 
 2462      61744D61 
 2462      736B00
 2463              	.LASF56:
 2464 0143 766F6C74 		.ascii	"volts\000"
 2464      7300
 2465              	.LASF22:
 2466 0149 746D7052 		.ascii	"tmpRegVal\000"
 2466      65675661 
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 61


 2466      6C00
 2467              	.LASF3:
 2468 0153 73686F72 		.ascii	"short unsigned int\000"
 2468      7420756E 
 2468      7369676E 
 2468      65642069 
 2468      6E7400
 2469              	.LASF29:
 2470 0166 4144435F 		.ascii	"ADC_StopConvert\000"
 2470      53746F70 
 2470      436F6E76 
 2470      65727400 
 2471              	.LASF52:
 2472 0176 6D566F6C 		.ascii	"mVolts\000"
 2472      747300
 2473              	.LASF19:
 2474 017d 72656733 		.ascii	"reg32\000"
 2474      3200
 2475              	.LASF14:
 2476 0183 666C6F61 		.ascii	"float32\000"
 2476      74333200 
 2477              	.LASF20:
 2478 018b 73697A65 		.ascii	"sizetype\000"
 2478      74797065 
 2478      00
 2479              	.LASF41:
 2480 0194 6C6F774C 		.ascii	"lowLimit\000"
 2480      696D6974 
 2480      00
 2481              	.LASF42:
 2482 019d 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2482      53657448 
 2482      6967684C 
 2482      696D6974 
 2482      00
 2483              	.LASF39:
 2484 01ae 4144435F 		.ascii	"ADC_EnableInjection\000"
 2484      456E6162 
 2484      6C65496E 
 2484      6A656374 
 2484      696F6E00 
 2485              	.LASF31:
 2486 01c2 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2486      4973456E 
 2486      64436F6E 
 2486      76657273 
 2486      696F6E00 
 2487              	.LASF17:
 2488 01d6 696E7436 		.ascii	"int64\000"
 2488      3400
 2489              	.LASF37:
 2490 01dc 4144435F 		.ascii	"ADC_SetChanMask\000"
 2490      53657443 
 2490      68616E4D 
 2490      61736B00 
 2491              	.LASF48:
 2492 01ec 4144435F 		.ascii	"ADC_SetGain\000"
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 62


 2492      53657447 
 2492      61696E00 
 2493              	.LASF15:
 2494 01f8 666C6F61 		.ascii	"float\000"
 2494      7400
 2495              	.LASF43:
 2496 01fe 68696768 		.ascii	"highLimit\000"
 2496      4C696D69 
 2496      7400
 2497              	.LASF50:
 2498 0208 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2498      436F756E 
 2498      7473546F 
 2498      5F6D566F 
 2498      6C747300 
 2499              	.LASF40:
 2500 021c 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2500      5365744C 
 2500      6F774C69 
 2500      6D697400 
 2501              	.LASF62:
 2502 022c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2502      6E657261 
 2502      7465645F 
 2502      536F7572 
 2502      63655C50 
 2503              	.LASF1:
 2504 024b 756E7369 		.ascii	"unsigned char\000"
 2504      676E6564 
 2504      20636861 
 2504      7200
 2505              	.LASF59:
 2506 0259 4144435F 		.ascii	"ADC_offset\000"
 2506      6F666673 
 2506      657400
 2507              	.LASF2:
 2508 0264 73686F72 		.ascii	"short int\000"
 2508      7420696E 
 2508      7400
 2509              	.LASF27:
 2510 026e 4144435F 		.ascii	"ADC_Stop\000"
 2510      53746F70 
 2510      00
 2511              	.LASF63:
 2512 0277 443A5C48 		.ascii	"D:\\Henny\\magisterka\\CY8KIT\\BLE\\BLE\\BLE_Temper"
 2512      656E6E79 
 2512      5C6D6167 
 2512      69737465 
 2512      726B615C 
 2513 02a4 61747572 		.ascii	"ature_Measurement01.cydsn\000"
 2513      655F4D65 
 2513      61737572 
 2513      656D656E 
 2513      7430312E 
 2514              	.LASF21:
 2515 02be 63684E75 		.ascii	"chNum\000"
 2515      6D00
ARM GAS  C:\Users\Henny\AppData\Local\Temp\ccAaGkFp.s 			page 63


 2516              	.LASF34:
 2517 02c4 6368616E 		.ascii	"chan\000"
 2517      00
 2518              	.LASF18:
 2519 02c9 63686172 		.ascii	"char\000"
 2519      00
 2520              	.LASF57:
 2521 02ce 4144435F 		.ascii	"ADC_channelsConfig\000"
 2521      6368616E 
 2521      6E656C73 
 2521      436F6E66 
 2521      696700
 2522              	.LASF47:
 2523 02e1 6F666673 		.ascii	"offset\000"
 2523      657400
 2524              	.LASF51:
 2525 02e8 61646343 		.ascii	"adcCounts\000"
 2525      6F756E74 
 2525      7300
 2526              	.LASF26:
 2527 02f2 4144435F 		.ascii	"ADC_Enable\000"
 2527      456E6162 
 2527      6C6500
 2528              	.LASF12:
 2529 02fd 696E7431 		.ascii	"int16\000"
 2529      3600
 2530              	.LASF46:
 2531 0303 4144435F 		.ascii	"ADC_SetOffset\000"
 2531      5365744F 
 2531      66667365 
 2531      7400
 2532              	.LASF61:
 2533 0311 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2533      4320342E 
 2533      392E3320 
 2533      32303135 
 2533      30333033 
 2534 0344 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2534      20726576 
 2534      6973696F 
 2534      6E203232 
 2534      31323230 
 2535 0377 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2535      66756E63 
 2535      74696F6E 
 2535      2D736563 
 2535      74696F6E 
 2536              	.LASF35:
 2537 039f 72657375 		.ascii	"result\000"
 2537      6C7400
 2538              	.LASF32:
 2539 03a6 4144435F 		.ascii	"ADC_GetResult16\000"
 2539      47657452 
 2539      6573756C 
 2539      74313600 
 2540              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
